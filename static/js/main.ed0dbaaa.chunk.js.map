{"version":3,"sources":["common/constants.js","images/person-holding-midnight-black-samsung-galaxy-s8-turn-on-near-1092671.jpg","Post/temp.js","images/landing-page-image.jpg","img/showcase.jpg","Prototype/social-media-user-details.js","Prototype/social-media-client.js","Component/NavBar/NavBarComponent.js","Component/NavBar/NavBarInSessionComponent.js","Profile/ProfileImageComponent.js","Profile/ProfileDetailsContainer.js","Profile/GitHubRepositories.js","Profile/ProfilesContainer.js","Component/LandingComponent.js","SignUp/SignUpComponent.js","SignIn/SignInComponent.js","Temporary/failure.js","Temporary/success.js","Dashboard/ExperienceTableComponent.js","Dashboard/EducationTableComponent.js","Dashboard/GitHubDashboard.js","Dashboard/PhoneNumberComponent.js","firebase_config.js","Dashboard/ImageComponent.js","Dashboard/DashboardContainer.js","Reducer/auth.reducer.js","Post/NeoPostItem.js","Post/NeoPosts.js","Post/CommentItem.js","Post/NeoPostDetail.js","Component/NavBar/NavBarAdmin.js","Admin/admin.js","Admin/adminposts.js","SocialMediaManagerComponent.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","LOCALHOST_URL","module","exports","axios","require","test","name","post","then","res","console","log","catch","err","SocialMediaUserDetails","React","Component","state","user","fetch","this","props","userId","response","json","results","setState","prevProps","prevState","snapshot","className","to","email","website","NavBarComponent","selectedTab","href","data-toggle","data-target","id","onClick","a","localStorage","clear","ProfileImageComponent","image","getImageById","style","height","width","src","alt","ProfileDetailsContainer","alert","alert_msg","currentUser","social","experience","education","followers","following","repos","componentDidMount","headers","getItem","getRepos","githubusername","username","handleFollow","method","setTimeout","bind","handleUnFollow","role","backgroundColor","bio","skills","map","skill","class","_id","length","exp","company","from","title","description","edu","school","degree","repo","stargazers_count","ProfileComponent","license","forks","profileId","repoName","language","parent","default_branch","updated_at","html_url","target","ProfilesContainer","users","nameToSearch","findAllUser","changeName","findUserByName","array","data","push","type","placeholder","onChange","e","value","float","marginLeft","key","LandingComponent","bkg_image_1","SignUpComponent","password","cpassword","token","register","body","JSON","stringify","r","undefined","errors","generateTokenAndSave","history","msg","required","connect","dispatch","SignInComponent","login","error","FailureComponent","SuccessComponent","ExperienceTableComponent","experiences","inputCompany","inputTitle","inputFrom","inputTo","inputDescription","current","updateCompany","updateTitle","updateFrom","updateTo","updateDescription","updateCurrent","edit","addExperience","getExperience","updateExperience","experienceId","deleteExperience","eid","changeEdit","n","readOnly","disabled","htmlFor","educationTableComponent","educations","inputSchool","inputDegree","updateSchool","updateDegree","addeducation","fieldofstudy","geteducation","updateeducation","educationId","deleteeducation","gitHubDashboard","githubUsername","dashboardToken","addGithubUsername","getGithubUsername","updateGithubUsername","deleteGithubUsername","phoneNumberComponent","phoneNumber","p","addPhoneNumber","unFormatPhoneNumber","phone","getPhoneNumber","formatPhoneNumber","phoneNumberString","match","replace","j","char","charAt","deletePhoneNumber","mask","guide","showMasked","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","ImageComponent","imageUrl","DashboardContainer","handleUploadSuccess","filename","ref","child","getDownloadURL","url","newA","saveImage","accept","storageRef","onUploadSuccess","PhoneNumberComponent","GitHubDashboard","EducationTableComponent","authReducer","action","setItem","isSession","NeoPostItem","likeNumber","likes","commentsNumber","comments","show","showDelete","likeStatus","handleLike","status","handleUnlike","text","format","date","delete","NeoPosts","posts","inputPost","postStatus","deletePost","get","postsData","submitPost","handleChange","onSubmit","preventDefault","cols","rows","currentPost","CommentItem","userName","handleDeleteComment","postId","NeoPostDetail","params","comment","commentNumber","handleComment","handlePostComponent","postData","handleDeleteOfComment","com","NavBarAdmin","AdminUsers","deleteUserAndProfile","getUsers","substring","AdminPosts","selectedPost","addPost","getPosts","updatePost","store","createStore","SocialMediaManagerComponent","basename","path","exact","component","render","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ed0dbaaa.chunk.js","sourcesContent":["export const API_URL = \"https://cs5610-wbdv-final-server.herokuapp.com/codebook\"\r\nexport const LOCALHOST_URL = \"http://localhost:3002/codebook\"\r\n","module.exports = __webpack_public_path__ + \"static/media/person-holding-midnight-black-samsung-galaxy-s8-turn-on-near-1092671.f52822f0.jpg\";","import {API_URL} from \"../common/constants\";\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nfunction test(name){\r\n    axios.post(`${API_URL}/users/name`, {\r\n        \"name\":name\r\n    }).then(res=>console.log(res)).catch(err=>console.log(err))\r\n}\r\n\r\nexport default test;\r\n","module.exports = __webpack_public_path__ + \"static/media/landing-page-image.ddd0118e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/showcase.4b31330b.jpg\";","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class SocialMediaUserDetails extends React.Component {\r\n\r\n    state = {\r\n        user: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${this.props.userId}`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                user: results\r\n            }))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.userId !== prevProps.userId) {\r\n            fetch(`https://jsonplaceholder.typicode.com/users/${this.props.userId}`)\r\n                .then(response => response.json())\r\n                .then(results => this.setState({\r\n                    user: results\r\n                }))\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <Link to={`/`}>\r\n                        <a className=\"nav-link cursor-pointer\">\r\n                            <i className=\"fas fa-times wbdv-course-editor wbdv-close\"/>\r\n                        </a>\r\n                    </Link>\r\n                    <span className=\"navbar-brand wbdv-course-title\">Social Media for Developers</span>\r\n                </nav>\r\n\r\n                <div className=\"container\">\r\n                    <h1>\r\n                        Details of {this.state.user.name}\r\n                    </h1>\r\n                    <h5>\r\n                        Email: {this.state.user.email}\r\n                    </h5>\r\n                    <h5>\r\n                        Website: {this.state.user.website}\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class SocialMediaClient extends React.Component {\r\n\r\n    state = {\r\n        users: [],\r\n        name: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                users: results\r\n            }))\r\n    }\r\n\r\n    searchUser = (name) => {\r\n        fetch(`https://jsonplaceholder.typicode.com/users?name=${name}`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                users: results\r\n            }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>\r\n                    Social Media Client List\r\n                </h1>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <input className=\"form-control\" placeholder=\"Enter First and Last Name\" value={this.state.title}\r\n                               onChange={(e) => this.setState({\r\n                                   name: e.target.value\r\n                               })}\r\n                        />\r\n                        <button\r\n                            onClick={() => this.searchUser(this.state.name)}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            Search\r\n                        </button>\r\n                    </li>\r\n                    <br/>\r\n                    {\r\n                        this.state.users.map(user =>\r\n                                <div className=\"col-12 col-sm-6 col-md-4 col-lg-3\">\r\n                                    <Link to={`/user-details/${user.id}`}>\r\n                                        <div className=\"card card-body .wbdv-grid-card\" key={user.id}>\r\n                                            <h5 className=\"card-title\">\r\n                                                {user.name}\r\n                                            </h5>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <br/>\r\n                                </div>\r\n                            // <li className=\"list-group-item\"\r\n                            //     key={user.id}>\r\n                            //\r\n                            // </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class NavBarComponent extends React.Component {\r\n\r\n\r\n    state = {\r\n        selectedTab: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <a href=\"#\" className=\"navbar-brand\">\r\n                        <Link to={\"/\"}>\r\n                            <i className=\"fas fa-code-branch\"/>\r\n                            GeeksHub\r\n                        </Link>\r\n                    </a>\r\n\r\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar-menu\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbar-menu\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/profiles\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Geeks</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/sign-in\"}>\r\n                                    <span href=\"#\" className=\"nav-link wbdv-page-tab\">Login</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/sign-up\"}>\r\n                                    <a href=\"#\" className=\"nav-link wbdv-page-tab\">Sign Up</a>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class NavBarComponent extends React.Component {\r\n\r\n\r\n    state = {\r\n        selectedTab: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <a href=\"#\" className=\"navbar-brand\">\r\n                        <Link to={\"/\"}>\r\n                            <i className=\"fas fa-code-branch\"/>\r\n                            GeeksHub\r\n                        </Link>\r\n                    </a>\r\n\r\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar-menu\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbar-menu\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/dashboard\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Dashboard</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/profiles\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Geeks</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/posts\"}>\r\n                                    <span href=\"#\" className=\"nav-link wbdv-page-tab\">Posts</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/sign-in\"}>\r\n                                    <span  className=\"nav-link wbdv-page-tab\"\r\n                                    onClick={ async () => {\r\n                                        localStorage.clear()\r\n\r\n                                    }\r\n                                    }\r\n                                    >Sign Out</span>\r\n                                </Link>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass ProfileImageComponent extends React.Component {\r\n\r\n    state = {\r\n        image: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getImageById(this.props.userId)\r\n    }\r\n\r\n    getImageById = () => {\r\n        fetch(`${API_URL}/profile/user/${this.props.userId}`)\r\n            .then(response => response.json())\r\n            .then(res => this.setState({\r\n                                           image: res.image\r\n                                       }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img style={{height : 130, width : 100}}\r\n                     src={this.state.image}\r\n                     alt=''/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileImageComponent\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\n\r\nimport ProfileImageComponent from \"./ProfileImageComponent\";\r\n\r\nexport default class ProfileDetailsContainer extends React.Component {\r\n\r\n    state = {\r\n        alert: false,\r\n        alert_msg: '',\r\n        currentUser: '',\r\n        user: {user: {}, social: {}, experience: [], education: [], followers:[], following:[] },\r\n        repos: []\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await fetch(`${API_URL}/profile/user/${this.props.userId}`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                user: results\r\n            })).then(() => {\r\n                fetch(`${API_URL}/profile/me`, {\r\n                    headers: {\r\n                        'x-auth-token': localStorage.getItem('token'),\r\n                        'content-type': 'application/json'\r\n                    }\r\n                }).then(response => response.json())\r\n                    .then(res => {\r\n                        this.setState({\r\n                            currentUser: res.user\r\n                        })\r\n                    })\r\n            })\r\n\r\n        await this.getRepos(this.state.user.githubusername)\r\n        await console.log(\"Name\", this.state.repos)\r\n    }\r\n\r\n    getRepos = (username) => {\r\n        fetch(`https://api.github.com/users/${username}/repos`, {\r\n            headers: {\r\n                'Authorization': 'token 862dd87f07b9ebce2fc3bad7d3496d3e54a4646b'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                repos: results\r\n            }))\r\n    }\r\n\r\n    //\r\n    // searchUser = (name) => {\r\n    //     fetch(`https://jsonplaceholder.typicode.com/users?name=${name}`)\r\n    //         .then(response => response.json())\r\n    //         .then(results => this.setState({\r\n    //             users: results\r\n    //         }))\r\n    // }\r\n\r\n    handleFollow = async () => {\r\n        await fetch(`${API_URL}/profile/follow/${this.state.user.user.email}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        }).then(() => {\r\n            if (localStorage.getItem('token') === null) {\r\n                this.setState({\r\n                    alert: true,\r\n                    alert_msg: 'Login to follow users'\r\n                })\r\n                setTimeout(function () {\r\n                    this.setState({alert: false, alert_msg: ''});\r\n                }.bind(this), 3000);\r\n            }\r\n\r\n        })\r\n\r\n        await fetch(`${API_URL}/profile/user/${this.props.userId}`)\r\n            .then(response => response.json())\r\n            .then(results =>\r\n                this.setState({\r\n                    user: results\r\n                })\r\n            )\r\n\r\n    }\r\n\r\n    handleUnFollow = async () => {\r\n        await fetch(`${API_URL}/profile/unfollow/${this.state.user.user.email}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        }).then(() => {\r\n            if (localStorage.getItem('token') === null) {\r\n                this.setState({\r\n                    alert: true,\r\n                    alert_msg: 'Login to unfollow users'\r\n                })\r\n                setTimeout(function () {\r\n                    this.setState({alert: false, alert_msg: ''});\r\n                }.bind(this), 3000);\r\n            }\r\n\r\n        })\r\n\r\n        await fetch(`${API_URL}/profile/user/${this.props.userId}`)\r\n            .then(response => response.json())\r\n            .then(results =>\r\n                this.setState({\r\n                    user: results\r\n                })\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    localStorage.getItem('token') === null &&\r\n                    <NavBarComponent/>\r\n                }\r\n                {\r\n                    localStorage.getItem('token') !== null &&\r\n                    <NavBarInSessionComponent/>\r\n                }\r\n                <div className=\"container\">\r\n\r\n                    {this.state.alert &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {this.state.alert_msg}\r\n                    </div>\r\n                    }\r\n\r\n                    <div className=\"profile-grid my-1\" style={{backgroundColor: \"rgb(23,162,184)\"}}>\r\n                        <div className=\"col-sm-4\">\r\n                            <ProfileImageComponent userId={this.props.userId}/>\r\n                        </div>\r\n                        <div className=\"col-sm-8\">\r\n                            <div className=\"row\">\r\n                                <h2 className=\"geek-name\"><b>{this.state.user.user.name}</b></h2>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <p className=\"geek-bio paragraph-justify\"><b>\r\n                                    {this.state.user.bio}\r\n                                </b></p>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <h4><i>{this.state.user.user.email}</i></h4>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <ul className=\"skills\">\r\n                                    {this.state.user.skills.map(skill =>\r\n                                        <li><i\r\n                                            className=\"fas fa-terminal\"/> {skill}\r\n                                        </li>\r\n                                    )}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div className=\"col-sm-1\"></div>\r\n\r\n                        {this.state.currentUser._id !== this.props.userId &&\r\n                        <div className=\"col-sm-2 btn btn-success\" onClick={this.handleFollow}>Follow</div>\r\n                        }\r\n\r\n                        {this.state.currentUser._id !== this.props.userId &&\r\n                        <div className=\"col-sm-2 btn btn-danger\" onClick={this.handleUnFollow}>UnFollow</div>\r\n                        }\r\n                        <div className=\"col-sm-2\">\r\n                            Followers: {this.state.user.followers.length}\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2\">\r\n                            Following: {this.state.user.following.length}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <div className=\"profile-exp bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Experience</h2>\r\n                        {\r\n                            this.state.user.experience.map(exp =>\r\n\r\n                                <div>\r\n                                    <h3 className=\"text-dark\">{exp.company}</h3>\r\n                                    <p>{exp.from} to {exp.to}</p>\r\n                                    <p>\r\n                                        <strong>Position: </strong>{exp.title}\r\n                                    </p>\r\n                                    <p>\r\n                                        <strong>Description: </strong>{exp.description}\r\n                                    </p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.user.experience.length === 0 &&\r\n                            <h5>No Experience Record Found</h5>\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <div className=\"profile-edu bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Education</h2>\r\n                        {\r\n                            this.state.user.education.map(edu =>\r\n                                <div>\r\n                                    <h3 className=\"text-dark\">{edu.school}</h3>\r\n                                    <p>{edu.from} - {edu.to}</p>\r\n                                    <p>\r\n                                        <strong>Degree and Field Of Study: </strong>{edu.degree}\r\n                                    </p>\r\n                                    <p>\r\n                                        <strong>Description: </strong>{edu.description}\r\n                                    </p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.user.education.length === 0 &&\r\n                            <h5>No Education Record Found</h5>\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <div className=\"profile-github\">\r\n                        <h2 className=\"text-dark my-1\">\r\n                            <i className=\"fab fa-github-square\"/> GitHub Repositories\r\n                        </h2>\r\n\r\n                        {\r\n                            this.state.repos.map(repo =>\r\n                                <div>\r\n                                    {repo.name !== 'undefined.github.io' &&\r\n\r\n                                    <Link\r\n                                        to={`/profiles/${this.state.user.user._id}/github/${repo.name}`}>\r\n                                        <div\r\n                                            className=\"p-1 border border-secondary github-repo\">\r\n                                            <div>\r\n                                                <h4><a href=\"#\"\r\n                                                       className=\"text-dark\">{repo.name}</a>\r\n                                                </h4>\r\n                                                <p className=\"paragraph-justify\">\r\n                                                    {repo.description}\r\n                                                </p>\r\n                                                <i className=\"fas fa-star\"/> {repo.stargazers_count}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                    }\r\n\r\n                                    <br/>\r\n\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.repos.length === 1 &&\r\n                            this.state.repos[0].name === 'undefined.github.io' &&\r\n                            <div>\r\n                                <h5>GitHub account not found</h5>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nexport default class ProfileComponent extends React.Component {\r\n\r\n    state = {\r\n        user: {user: {}, social: {}, experience: [], education: [], skills: []},\r\n        repo: {license: '', forks: ''}\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await fetch(`${API_URL}/profile/user/${this.props.profileId}`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                user: results\r\n            }))\r\n        await fetch(`https://api.github.com/repos/${this.state.user.githubusername}/${this.props.repoName}`, {\r\n            headers: {\r\n                'Authorization': 'token 862dd87f07b9ebce2fc3bad7d3496d3e54a4646b'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                repo: results\r\n            }))\r\n        await console.log(\"Name\", this.state.user)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    localStorage.getItem('token') === null &&\r\n                    <NavBarComponent/>\r\n                }\r\n                {\r\n                    localStorage.getItem('token') !== null &&\r\n                    <NavBarInSessionComponent/>\r\n                }\r\n                {/*{this.state.user.user.name}*/}\r\n                {/*{this.props.repoName}*/}\r\n                {/*{this.state.repo.name}*/}\r\n                <div className=\"container\">\r\n\r\n                    <br/>\r\n                    <Link to={`/profiles/${this.props.profileId}`}>\r\n                        <span className=\"btn btn-light\">Back To {this.state.user.user.name}'s Profiles</span>\r\n                    </Link>\r\n                    <br/>\r\n\r\n                    <div className=\"profile-github\">\r\n\r\n                        <div className=\"p-1 border border-dark github-repo\">\r\n                            <div>\r\n                                <h4><a href=\"#\" className=\"text-dark\">{this.state.repo.name}</a></h4>\r\n                                <p className=\"paragraph-justify\">\r\n                                    {this.state.repo.description}\r\n                                </p>\r\n                                <i className=\"fas fa-circle\"/> {this.state.repo.language}\r\n                                <br/>\r\n                                <i className=\"fas fa-star\"/> {this.state.repo.stargazers_count}\r\n                                <br/>\r\n                                <i className=\"fas fa-code-branch\"/>\r\n                                {\r\n                                    this.state.repo.forks !== 0 ||\r\n                                    !this.state.repo.parent &&\r\n                                     <span>\r\n                                         <span> </span>\r\n                                         {this.state.repo.forks}\r\n                                     </span>\r\n\r\n\r\n                                }\r\n                                {this.state.repo.forks === 0 &&\r\n                                this.state.repo.parent &&\r\n                                <span>\r\n                                    <span> </span>\r\n                                    {this.state.repo.parent.forks}\r\n                                </span>\r\n\r\n                                }\r\n                                <br/>\r\n                                <b>Default\r\n                                    Branch</b>: {this.state.repo.default_branch}\r\n                                <br/>\r\n                                {\r\n                                    this.state.repo.license !== null &&\r\n                                    <div>\r\n                                        <i className=\"fas fa-balance-scale\"/>\r\n                                        <span> </span>{this.state.repo.license.name}\r\n                                    </div>\r\n\r\n                                }\r\n\r\n\r\n                                <b>Updated At:</b> {this.state.repo.updated_at}\r\n                                <br/>\r\n                                <a href={this.state.repo.html_url} target=\"_blank\">\r\n\r\n                                    <b>Repository Link</b>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\nimport ProfileImageComponent from \"./ProfileImageComponent\";\r\n\r\nconst axios = require('axios');\r\nconst test = require('../Post/temp')\r\nexport default class ProfilesContainer extends React.Component {\r\n\r\n    state = {\r\n        users: [],\r\n        repos: [],\r\n        nameToSearch: '',\r\n        userId: '',\r\n        image: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.findAllUser()\r\n        // this.getDisplayImage()\r\n    }\r\n\r\n\r\n    // getDisplayImage = () => {\r\n    //     fetch(`${API_URL}/profile/image`, {\r\n    //         headers: {\r\n    //             'x-auth-token': localStorage.getItem('token')\r\n    //         }\r\n    //     })\r\n    //         .then(response => response.json())\r\n    //         .then(results => this.setState({\r\n    //             image : results.image\r\n    //                                        }))\r\n    // }\r\n\r\n    changeName = (user) => {\r\n        this.setState({\r\n                          nameToSearch: user\r\n                      })\r\n    }\r\n\r\n    findUserByName = (name) => {\r\n        let array = [];\r\n        axios.post(`${API_URL}/users/name`, {\r\n            \"name\": name\r\n        })\r\n            .then(results => {\r\n                // this.setState({\r\n                //     users:res.data\r\n                // })\r\n                // console.log(results);\r\n                results.data.map(user => {\r\n                    // console.log\r\n                    let res = {\r\n                        user\r\n                    };\r\n                    array.push(res);\r\n                })\r\n                this.setState({\r\n                                  users: array\r\n                              })\r\n                console.log(this.state.users)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    findAllUser = () => {\r\n        fetch(`${API_URL}/profile/all`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                                               users: results\r\n                                           }))\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    localStorage.getItem('token') === null &&\r\n                    <NavBarComponent/>\r\n                }\r\n                {\r\n                    localStorage.getItem('token') !== null &&\r\n                    <NavBarInSessionComponent/>\r\n                }\r\n\r\n                <div className=\"container\">\r\n\r\n\r\n                    <div className=\"row find-user\">\r\n                        <button\r\n                            onClick={this.findAllUser}\r\n                            className=\"btn btn-warning find-all-users-button\">Find All Users\r\n                        </button>\r\n                        <input type=\"text\" placeholder=\"Search for user\"\r\n                               onChange={(e) => this.changeName(e.target.value)}\r\n                               className=\"form-control search-geeks\"\r\n                               width=\"100\"/>\r\n                        <button className=\"btn btn-info search-geek-button\"\r\n                                onClick={() => this.findUserByName(this.state.nameToSearch)}>Search\r\n                        </button>\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <div className=\"row profiles\">\r\n                        <div className=\"col-sm-12\">\r\n                            {this.state.users.length>0 && this.state.users.map(user => (\r\n                                <div className=\"card profile-card\"\r\n                                     style={{float: \"left\", marginLeft: \"1.2em\"}}\r\n                                     key={user.user._id}>\r\n                                    <ProfileImageComponent userId={user.user._id}/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{user.user.name}</h5>\r\n                                        <Link to={`/profiles/${user.user._id}`}>\r\n                                            <button href=\"#\" className=\"btn btn-primary\">\r\n                                                See Profile\r\n                                            </button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/*<div className=\"col-sm-1 dp\">*/}\r\n\r\n                    {/*    /!*<img src=\"../images/sajag_dp.jfif\" alt=\"\" width=\"250\" height=\"250\"/>*!/*/}\r\n                    {/*    <img src={this.state.image} alt=\"\" width=\"250\" height=\"250\"/>*/}\r\n                    {/*</div>*/}\r\n\r\n                    {/*{*/}\r\n                    {/*    this.state.users&&this.state.users.map(user =>*/}\r\n                    {/*        <div className=\"container\">*/}\r\n                    {/*        <div key={user.user._id} className=\"col-sm-6\">*/}\r\n                    {/*            <div className=\"row\">*/}\r\n                    {/*                <h2 className=\"geek-name\"><b>{user.user.name}</b></h2>*/}\r\n                    {/*            </div>*/}\r\n                    {/*            <div className=\"row\">*/}\r\n                    {/*                <p className=\"geek-bio\">*/}\r\n                    {/*                    {user.bio}*/}\r\n                    {/*                </p>*/}\r\n                    {/*            </div>*/}\r\n                    {/*            <div className=\"row\">*/}\r\n                    {/*                <p className=\"geek-bio\">*/}\r\n                    {/*                    Quincy, MA*/}\r\n                    {/*                </p>*/}\r\n                    {/*            </div>*/}\r\n                    {/*            <div className=\"row\">*/}\r\n                    {/*                <Link to={`/profiles/${user.user._id}`}>*/}\r\n                    {/*                    <span href=\"#\" className=\"btn btn-danger\">Open Profile</span>*/}\r\n                    {/*                </Link>*/}\r\n                    {/*            </div>*/}\r\n                    {/*        </div>*/}\r\n                    {/*        </div>*/}\r\n                    {/*    )*/}\r\n                    {/*}*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport NavBarComponent from \"./NavBar/NavBarComponent\";\r\nimport  bkg_image from '../images/landing-page-image.jpg'\r\nimport bkg_image_1 from '../images/person-holding-midnight-black-samsung-galaxy-s8-turn-on-near-1092671.jpg'\r\n\r\nexport default class LandingComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarComponent/>\r\n                <div className={\"landingContainer\"}>\r\n                <img src={bkg_image_1} className=\"img-fluid\" alt=\"Logo\"/>\r\n                {/*<div className=\"center landing-main-div\">*/}\r\n                    {/*<h2 className=\"text-dark\">*/}\r\n                    {/*    <b style={{color:'white'}}>Welcome to GeeksHub</b>*/}\r\n                    {/*</h2>*/}\r\n\r\n                    {/*<h2 className=\"text-dark\">*/}\r\n                    {/*    <b><i>A Social Media for Developers</i></b>*/}\r\n                    {/*</h2>*/}\r\n\r\n                    {/*<button className=\"login-button btn-secondary btn-lg\">Login</button>*/}\r\n                    {/*<button className=\"register-button btn-secondary btn-lg\">Register</button>*/}\r\n\r\n                {/*</div>*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass SignUpComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        password: '',\r\n        email: '',\r\n        name: '',\r\n        cpassword: '',\r\n        token: '',\r\n        alert: false,\r\n        alert_msg: []\r\n    }\r\n\r\n    register = async () => {\r\n        if (this.state.password !== this.state.cpassword) {\r\n            this.setState({\r\n                alert: true,\r\n                alert_msg: [{'msg':'Passwords do not match'}]\r\n            })\r\n            setTimeout(function () {\r\n                this.setState({alert: false, alert_msg: []});\r\n            }.bind(this), 3000);\r\n\r\n        } else {\r\n            // alert(\"Awesome\")\r\n            await fetch(`${API_URL}/users`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(\r\n                    {\r\n                        password: this.state.password,\r\n                        email: this.state.email,\r\n                        name: this.state.name\r\n                    }\r\n                )\r\n            }).then(response =>\r\n                response.json()\r\n            ).then(\r\n                r => {\r\n                    if (r.errors !== undefined) {\r\n\r\n                            this.setState({\r\n                                alert: true,\r\n                                alert_msg: r.errors\r\n                            })\r\n                        setTimeout(function () {\r\n                            this.setState({alert: false, alert_msg: []});\r\n                        }.bind(this), 3000);\r\n\r\n                    } else {\r\n                        console.log(\"SUCCESS\", r)\r\n                        this.setState(\r\n                            {\r\n                                token: r.token\r\n                            }\r\n                        )\r\n                        fetch(\r\n                            `${API_URL}/profile`, {\r\n                                headers: {\r\n                                    'x-auth-token': this.state.token,\r\n                                    'content-type': 'application/json'\r\n                                },\r\n                                method: 'POST'\r\n                            }).then(\r\n                            async () =>  {\r\n                                await console.log('State token ', this.state.token)\r\n                                await this.props.generateTokenAndSave(this.state.token)\r\n                                await this.props.history.push(`/dashboard`)\r\n                            }\r\n                    )\r\n\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <NavBarComponent/>\r\n                <div className=\"container login-main-div-1\">\r\n                    {this.state.alert && this.state.alert_msg.length>0 && this.state.alert_msg.map(err =>(\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {err.msg}\r\n                        </div>\r\n                    )\r\n                    )}\r\n\r\n\r\n                    <p className=\"lead\"><i className=\"fas fa-user-plus\"/> SIGN UP</p>\r\n                    <form className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            {/*<input*/}\r\n                            {/*    type=\"text\"*/}\r\n                            {/*    placeholder=\"Full Name\"*/}\r\n                            {/*    name=\"name\"*/}\r\n                            {/*    required*/}\r\n                            {/*/>*/}\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    name: e.target.value\r\n                                })\r\n                            }\r\n                                   placeholder=\"Full Name\"\r\n                                   name={\"email\"}\r\n                                   required\r\n                                   value={this.state.name}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    email: e.target.value\r\n                                })\r\n                            }\r\n                                   type={\"email\"}\r\n                                   placeholder=\"Email\"\r\n                                   name={\"email\"}\r\n                                   required={\"true\"}\r\n                                   value={this.state.email}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    password: e.target.value\r\n                                })\r\n                            }\r\n                                   type={\"password\"}\r\n                                   placeholder=\"Password\"\r\n                                   name={\"password\"}\r\n                                   required={\"true\"}\r\n                                   value={this.state.password}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    cpassword: e.target.value\r\n                                })\r\n                            }\r\n                                   type={\"password\"}\r\n                                   placeholder=\"Confirm Password\"\r\n                                   name={\"confirmPassword\"}\r\n                                   required={\"true\"}\r\n                                   value={this.state.cpassword}\r\n                            />\r\n\r\n                        </div>\r\n                    </form>\r\n                    <button\r\n                        onClick={this.register}\r\n                        type=\"submit\" className=\"btn btn-primary\">\r\n                        Sign Up\r\n                    </button>\r\n\r\n                    <p className=\"my-1\">\r\n                        Already have an account?\r\n                        <Link to={\"/sign-in\"}> Sign In</Link>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    return {\r\n        // token: state.token\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n    return {\r\n        generateTokenAndSave: (token) =>\r\n            dispatch({\r\n                type: \"ADD_TOKEN\",\r\n                token: token\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    stateToPropertyMapper, dispatchToPropertyMapper)(SignUpComponent)\r\n","import React from \"react\";\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SignInComponent extends React.Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        alert: false,\r\n        alert_msg: ''\r\n    }\r\n\r\n    login = async () => {\r\n        await fetch(`${API_URL}/users/auth`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    password: this.state.password,\r\n                    email: this.state.email\r\n                }\r\n            )\r\n        }).then(response =>\r\n            response.json()\r\n        ).then(\r\n            r => {\r\n                if (r.errors !== undefined) {\r\n                    r.errors.map(error => {\r\n                            this.setState({\r\n                                alert: true,\r\n                                alert_msg: error.msg\r\n                            })\r\n                            setTimeout(function () {\r\n                                this.setState({alert: false, alert_msg: ''});\r\n                            }.bind(this), 3000);\r\n                        }\r\n                    )\r\n                } else {\r\n                    console.log(\"SUCCESS\", r.user.role)\r\n                    this.props.generateTokenAndSave(r.token)\r\n                    {\r\n                        r.user === undefined &&\r\n                        this.props.history.push(`/dashboard`)\r\n                    }\r\n                    {\r\n                        r.user.role === 0 &&\r\n                        this.props.history.push(`/dashboard`)\r\n                    }\r\n                    {\r\n                        r.user.role === 1 &&\r\n                        this.props.history.push(`/admin-users`)\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <NavBarComponent/>\r\n\r\n                <div className=\"container login-main-div\">\r\n                    {this.state.alert &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {this.state.alert_msg}\r\n                    </div>\r\n                    }\r\n\r\n                    <p className=\"lead\"><i className=\"fas fa-sign-in-alt\"/> SIGN IN</p>\r\n                    <form className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    email: e.target.value\r\n                                })\r\n                            }\r\n                                   placeholder=\"Email Address\"\r\n                                   name={\"email\"}\r\n                                   required\r\n                                   type={\"email\"}\r\n                                   value={this.state.email}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    password: e.target.value\r\n                                })\r\n                            }\r\n                                   placeholder=\"Password\"\r\n                                   name={\"password\"}\r\n                                   type={\"password\"}\r\n                                   required\r\n                                   value={this.state.password}\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                    <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">\r\n                        Sign In\r\n                    </button>\r\n\r\n                    <p className=\"my-1\">\r\n                        Don't have an account?\r\n                        <Link to={\"/sign-up\"}> Sign Up</Link>\r\n                    </p>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    return {\r\n        // token: state.token\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n    return {\r\n        generateTokenAndSave: (token) =>\r\n            dispatch({\r\n                type: \"ADD_TOKEN\",\r\n                token: token\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    stateToPropertyMapper, dispatchToPropertyMapper)(SignInComponent)\r\n\r\n","import React from \"react\";\r\nexport default class FailureComponent extends React.Component{\r\n    render() {\r\n        return (\r\n            <h1>Failure</h1>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nexport default class SuccessComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarComponent/>\r\n            <h1>Success</h1>\r\n            <Link to={\"/dashboard\"}>\r\n                Dashboard\r\n            </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker/es\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass ExperienceTableComponent extends React.Component {\r\n\r\n    state = {\r\n        experiences: [],\r\n        inputCompany: '',\r\n        inputTitle: '',\r\n        inputFrom: '',\r\n        inputTo: '',\r\n        inputDescription: '',\r\n        current: false,\r\n\r\n        updateCompany: '',\r\n        updateTitle: '',\r\n        updateFrom: '',\r\n        updateTo: '',\r\n        updateDescription: '',\r\n        updateCurrent: false,\r\n\r\n\r\n        edit: false,\r\n\r\n\r\n    }\r\n\r\n    addExperience = () => {\r\n        fetch(`${API_URL}/profile/experience`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    company: this.state.inputCompany,\r\n                    title: this.state.inputTitle,\r\n                    from: this.state.inputFrom,\r\n                    to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    current: this.state.current,\r\n                    description: this.state.inputDescription\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.getExperience()\r\n            })\r\n    }\r\n\r\n    updateExperience = (experienceId) => {\r\n        fetch(`${API_URL}/profile/experience/${experienceId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    company: this.state.updateCompany,\r\n                    title: this.state.updateTitle,\r\n                    from: this.state.updateFrom,\r\n                    // to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    to: this.state.updateTo,\r\n                    current: this.state.updateCurrent,\r\n                    description: this.state.updateDescription\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.getExperience()\r\n            })\r\n    }\r\n\r\n    deleteExperience = (eid) => {\r\n        fetch(`${API_URL}/profile/experience/${eid}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                this.getExperience()\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        this.getExperience();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.experienceId !== this.props.experienceId)\r\n            this.getExperience()\r\n    }\r\n\r\n    getExperience = () => {\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token')\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                experiences: results.experience,\r\n                inputCompany: '',\r\n                inputTitle: '',\r\n                inputFrom: '',\r\n                inputDescription: '',\r\n                inputTo: ''\r\n            }))\r\n    }\r\n\r\n    changeEdit = () => {\r\n        if (this.state.edit === false)\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        else\r\n            this.setState({\r\n                edit: false\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col list-group\">\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        {/*<ul className=\"row experience-ul\">*/}\r\n                        <div className=\"col-lg-2\">Company</div>\r\n                        <div className=\"hide-sm col-lg-2\">Title</div>\r\n                        <div className=\"hide-sm col-lg-2\">Description</div>\r\n                        <div className=\"hide-sm col-lg-2\">From</div>\r\n                        <div className=\"hide-sm col-lg-2\">To</div>\r\n                        {/*</ul>*/}\r\n                    </div>\r\n                </div>\r\n                {/*<tbody>*/}\r\n                {\r\n                    this.state.experiences&&this.state.experiences.map(experience =>\r\n                        <Link to={`/dashboard/experience/${experience._id}`}>\r\n\r\n\r\n                            {\r\n                                this.state.edit === true && this.props.experienceId === experience._id &&\r\n\r\n                                <div className=\"list-group-item active\">\r\n                                    <div className=\"container row\" key={experience._id}>\r\n                                        <div className=\"col-lg-2\">\r\n\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Company Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateCompany: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateCompany}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Title Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTitle: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateTitle}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <textarea\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Description Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateDescription: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateDescription}\r\n                                            />\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input From Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateFrom: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateFrom}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {this.state.updateTo !== 'Present' &&\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input To Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTo: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateTo}\r\n                                            />\r\n                                            }\r\n                                            {this.state.updateTo === 'Present' &&\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input To Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTo: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                readOnly={\"true\"}\r\n                                                disabled={\"true\"}\r\n                                                value={this.state.updateTo}\r\n                                            />\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n                                            <button\r\n                                                className=\"btn btn-danger\"\r\n                                                onClick={async () => {\r\n                                                    await this.changeEdit()\r\n                                                    await this.updateExperience(experience._id)\r\n\r\n                                                }}\r\n                                            >\r\n\r\n                                                Save\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            }\r\n\r\n                            {\r\n\r\n                                this.state.edit === false && this.props.experienceId === experience._id &&\r\n\r\n\r\n                                <div>\r\n                                    <div className=\"list-group-item active\">\r\n                                        <div className=\"container row\" key={experience._id}>\r\n                                            <div className=\"col-lg-2\">\r\n\r\n                                                {experience.company}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {experience.title}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {experience.description}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {experience.from}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {experience.to}\r\n\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n                                                <button\r\n                                                    className=\"btn btn-danger edit-button\"\r\n                                                    onClick={async () => {\r\n                                                        await this.setState({\r\n                                                            updateCompany: experience.company,\r\n                                                            updateTitle: experience.title,\r\n                                                            updateDescription: experience.description,\r\n                                                            updateTo: experience.to,\r\n                                                            updateFrom: experience.from,\r\n                                                            updateCurrent: experience.current\r\n                                                        })\r\n                                                        await this.changeEdit()\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n\r\n                                                    <i className=\"far fa-edit\"\r\n                                                    > </i>\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"btn btn-danger\"\r\n                                                    onClick={() => this.deleteExperience(experience._id)}\r\n                                                >\r\n\r\n                                                    <i className=\"far fa-trash-alt\"> </i>\r\n\r\n                                                </button>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                            {\r\n                                this.props.experienceId !== experience._id &&\r\n\r\n                                <div className=\"list-group-item\"\r\n                                     onClick={() => {\r\n                                         this.setState({\r\n                                             edit: false\r\n                                         })\r\n                                     }}\r\n                                >\r\n                                    <div className=\"container row\" key={experience._id}>\r\n                                        <div className=\"col-lg-2\">\r\n\r\n                                            {experience.company}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {experience.title}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {experience.description}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {experience.from}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {experience.to}\r\n\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </Link>\r\n                    )\r\n                }\r\n\r\n                <br/>\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Company Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputCompany: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputCompany}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Title Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputTitle: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputTitle}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <textarea\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Description Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputDescription: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputDescription}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"From...\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputFrom: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputFrom}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            {this.state.current &&\r\n                            <input\r\n                                value={\"Present\"}\r\n                                readOnly={\"true\"}\r\n                                disabled={\"true\"}\r\n                            />\r\n                            }\r\n                            {!this.state.current &&\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"To\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputTo: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputTo}\r\n                            />\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-lg-1\">\r\n\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                        current: !this.state.current\r\n                                    })\r\n                                }\r\n\r\n                                id=\"vehicle1\" name=\"vehicle1\"\r\n                                value={this.state.current}/>\r\n\r\n                            <label htmlFor=\"vehicle1\"> Ongoing</label>\r\n                        </div>\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    this.addExperience()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                <i className=\"fas fa-plus-circle fa-lg\"> </i>\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExperienceTableComponent\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker/es\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass educationTableComponent extends React.Component {\r\n\r\n    state = {\r\n        educations: [],\r\n        inputSchool: '',\r\n        inputDegree: '',\r\n        inputFrom: '',\r\n        inputTo: '',\r\n        inputDescription: '',\r\n        current: false,\r\n\r\n        updateSchool: '',\r\n        updateDegree: '',\r\n        updateFrom: '',\r\n        updateTo: '',\r\n        updateDescription: '',\r\n        updateCurrent: false,\r\n\r\n\r\n        edit: false,\r\n\r\n\r\n    }\r\n\r\n    addeducation = () => {\r\n        fetch(`${API_URL}/profile/education`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    school: this.state.inputSchool,\r\n                    degree: this.state.inputDegree,\r\n                    from: this.state.inputFrom,\r\n                    to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    current: this.state.current,\r\n                    description: this.state.inputDescription,\r\n                    fieldofstudy: 'null'\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.geteducation()\r\n            })\r\n    }\r\n\r\n    updateeducation = (educationId) => {\r\n        fetch(`${API_URL}/profile/education/${educationId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    school: this.state.updateSchool,\r\n                    degree: this.state.updateDegree,\r\n                    from: this.state.updateFrom,\r\n                    // to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    to: this.state.updateTo,\r\n                    current: this.state.updateCurrent,\r\n                    description: this.state.updateDescription,\r\n                    fieldofstudy: 'null'\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.geteducation()\r\n            })\r\n    }\r\n\r\n    deleteeducation = (eid) => {\r\n        fetch(`${API_URL}/profile/education/${eid}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                this.geteducation()\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        this.geteducation();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.educationId !== this.props.educationId)\r\n            this.geteducation()\r\n    }\r\n\r\n    geteducation = () => {\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token')\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                educations: results.education,\r\n                inputSchool: '',\r\n                inputDegree: '',\r\n                inputFrom: '',\r\n                inputDescription: '',\r\n                inputTo: ''\r\n            }))\r\n    }\r\n\r\n    changeEdit = () => {\r\n        if (this.state.edit === false)\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        else\r\n            this.setState({\r\n                edit: false\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col list-group\">\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        {/*<ul className=\"row education-ul\">*/}\r\n                        <div className=\"col-lg-2\">School</div>\r\n                        <div className=\"hide-sm col-lg-2\">Degree and Field of Study</div>\r\n                        <div className=\"hide-sm col-lg-2\">Description</div>\r\n                        <div className=\"hide-sm col-lg-2\">From</div>\r\n                        <div className=\"hide-sm col-lg-2\">To</div>\r\n                        {/*</ul>*/}\r\n                    </div>\r\n                </div>\r\n                {/*<tbody>*/}\r\n                {\r\n                    this.state.educations&&this.state.educations.map(education =>\r\n                        <Link to={`/dashboard/education/${education._id}`}>\r\n\r\n\r\n                            {\r\n                                console.log(\"Old Eid\", this.props.educationId + \" AA \", education._id)\r\n                            }\r\n\r\n                            {\r\n                                this.state.edit === true && this.props.educationId === education._id &&\r\n\r\n                                <div className=\"list-group-item active\">\r\n                                    <div className=\"container row\" key={education._id}>\r\n                                        <div className=\"col-lg-2\">\r\n\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input School Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateSchool: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateSchool}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Degree Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateDegree: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateDegree}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <textarea\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Description Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateDescription: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateDescription}\r\n                                            />\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input From Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateFrom: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateFrom}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {this.state.updateTo !== 'Present' &&\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input To Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTo: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateTo}\r\n                                            />\r\n                                            }\r\n                                            {this.state.updateTo === 'Present' &&\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input To Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTo: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                readOnly={\"true\"}\r\n                                                disabled={\"true\"}\r\n                                                value={this.state.updateTo}\r\n                                            />\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n                                            <button\r\n                                                className=\"btn btn-danger\"\r\n                                                onClick={async () => {\r\n                                                    await this.changeEdit()\r\n                                                    await this.updateeducation(education._id)\r\n\r\n                                                }}\r\n                                            >\r\n\r\n                                                Save\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            }\r\n\r\n                            {\r\n\r\n                                this.state.edit === false && this.props.educationId === education._id &&\r\n\r\n\r\n                                <div>\r\n                                    <div className=\"list-group-item active\">\r\n                                        <div className=\"container row\" key={education._id}>\r\n                                            <div className=\"col-lg-2\">\r\n\r\n                                                {education.school}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {education.degree}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {education.description}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {education.from}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {education.to}\r\n\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n                                                <button\r\n                                                    className=\"btn btn-danger edit-button\"\r\n                                                    onClick={async () => {\r\n                                                        await this.setState({\r\n                                                            updateSchool: education.school,\r\n                                                            updateDegree: education.degree,\r\n                                                            updateDescription: education.description,\r\n                                                            updateTo: education.to,\r\n                                                            updateFrom: education.from,\r\n                                                            updateCurrent: education.current\r\n                                                        })\r\n                                                        await this.changeEdit()\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n\r\n                                                    <i className=\"far fa-edit\"\r\n                                                    > </i>\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"btn btn-danger\"\r\n                                                    onClick={() => this.deleteeducation(education._id)}\r\n                                                >\r\n\r\n                                                    <i className=\"far fa-trash-alt\"> </i>\r\n\r\n                                                </button>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                            {\r\n                                this.props.educationId !== education._id &&\r\n\r\n                                <div className=\"list-group-item\"\r\n                                     onClick={() => {\r\n                                         this.setState({\r\n                                             edit: false\r\n                                         })\r\n                                     }}\r\n                                >\r\n                                    <div className=\"container row\" key={education._id}>\r\n                                        <div className=\"col-lg-2\">\r\n\r\n                                            {education.school}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {education.degree}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {education.description}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {education.from}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {education.to}\r\n\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </Link>\r\n                    )\r\n                }\r\n\r\n                <br/>\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input School Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputSchool: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputSchool}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Degree Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputDegree: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputDegree}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <textarea\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Description Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputDescription: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputDescription}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"From...\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputFrom: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputFrom}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            {this.state.current &&\r\n                            <input\r\n                                value={\"Present\"}\r\n                                readOnly={\"true\"}\r\n                                disabled={\"true\"}\r\n                            />\r\n                            }\r\n                            {!this.state.current &&\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"To\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputTo: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputTo}\r\n                            />\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-lg-1\">\r\n\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                        current: !this.state.current\r\n                                    })\r\n                                }\r\n\r\n                                id=\"vehicle1\" name=\"vehicle1\"\r\n                                value={this.state.current}/>\r\n\r\n                            <label htmlFor=\"vehicle1\"> Ongoing</label>\r\n                        </div>\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    this.addeducation()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                <i className=\"fas fa-plus-circle fa-lg\"> </i>\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default educationTableComponent\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker/es\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass gitHubDashboard extends React.Component {\r\n\r\n    state = {\r\n        githubUsername: null,\r\n        dashboardToken: '',\r\n        edit: false,\r\n    }\r\n\r\n    addGithubUsername = () => {\r\n        // console.log(\"Trying to add githubusername\")\r\n        // console.log(localStorage.getItem('token'))\r\n        // console.log(this.state.githubUsername)\r\n        fetch(`${API_URL}/profile/githubusername`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    githubusername: this.state.githubUsername\r\n                }\r\n            )\r\n        }).then(() => this.getGithubUsername())\r\n    }\r\n\r\n    updateGithubUsername = (educationId) => {\r\n        fetch(`${API_URL}/profile/githubusername`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    school: this.state.updateSchool,\r\n                    degree: this.state.updateDegree,\r\n                    from: this.state.updateFrom,\r\n                    // to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    to: this.state.updateTo,\r\n                    current: this.state.updateCurrent,\r\n                    description: this.state.updateDescription,\r\n                    fieldofstudy: 'null'\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.getGithubUsername()\r\n            })\r\n    }\r\n\r\n    deleteGithubUsername = (eid) => {\r\n        fetch(`${API_URL}/profile/githubusername`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': this.state.dashboardToken,\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(() => {\r\n                this.getGithubUsername()\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        await this.setState({\r\n            dashboardToken: localStorage.getItem('token')\r\n        })\r\n        await this.getGithubUsername();\r\n    }\r\n\r\n\r\n    getGithubUsername = () => {\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': this.state.dashboardToken\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                githubUsername: results.githubusername !== \"\" ? results.githubusername: null\r\n\r\n            }))\r\n    }\r\n\r\n    changeEdit = () => {\r\n        if (this.state.edit === false)\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        else\r\n            this.setState({\r\n                edit: false\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <div>\r\n            //     {this.state.githubUsername}\r\n            // </div>\r\n\r\n\r\n            <div>\r\n                {this.state.edit === false &&\r\n                <div className=\"col list-group\">\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"container row\">\r\n                            {!this.state.githubUsername &&\r\n                            <div className=\"col-lg-2\"><i>No Username Given</i></div>\r\n                            }\r\n                            {this.state.githubUsername &&\r\n                            <div className=\"col-lg-2\"><i>{this.state.githubUsername}</i></div>\r\n                            }\r\n\r\n                            <div className=\"col-lg-2\">\r\n                                {!this.state.githubUsername &&\r\n                                <button\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            edit: true\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    className=\"btn btn-danger\">\r\n                                    Add Username\r\n                                </button>\r\n                                }\r\n                                {this.state.githubUsername &&\r\n                                <button\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            edit: true\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    className=\"btn btn-danger\">\r\n                                    Edit Username\r\n                                </button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n                {this.state.edit === true &&\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input GitHub Username\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            githubUsername: e.target.value,\r\n                                        }\r\n                                    )}\r\n                                value={this.state.githubUsername}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={async () => {\r\n                                    await this.setState({\r\n                                        edit: false\r\n                                    })\r\n                                    await this.addGithubUsername()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                Enter\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={async () => {\r\n                                    await this.setState({\r\n                                        edit: false\r\n                                    })\r\n                                    await this.deleteGithubUsername()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                Delete\r\n\r\n                            </button>\r\n                        </div>\r\n                        {/*<div className=\"col-lg-1\">*/}\r\n                        {/*    <button*/}\r\n                        {/*        onClick={async () => {*/}\r\n                        {/*            await this.setState({*/}\r\n                        {/*                edit: false*/}\r\n                        {/*            })*/}\r\n                        {/*            await this.deleteGithubUsername()*/}\r\n                        {/*        }*/}\r\n                        {/*        }*/}\r\n                        {/*        className=\"btn btn-danger\"*/}\r\n                        {/*    >*/}\r\n                        {/*        Delete*/}\r\n                        {/*    </button>*/}\r\n\r\n\r\n                        {/*</div>*/}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default gitHubDashboard\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker/es\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport MaskedInput from \"react-text-mask/dist/reactTextMask\";\r\n\r\n\r\nclass phoneNumberComponent extends React.Component {\r\n\r\n    state = {\r\n        phoneNumber: '',\r\n        dashboardToken: '',\r\n        edit: false,\r\n        p: ''\r\n    }\r\n\r\n    addPhoneNumber = () => {\r\n        if(this.state.phoneNumber === null) {\r\n            alert(\"Enter correct format phone number\");\r\n            this.setState({\r\n                phoneNumber: null\r\n            })\r\n\r\n        }\r\n        else if(this.unFormatPhoneNumber(this.state.phoneNumber).length < 10) {\r\n            alert(\"Enter correct format phone number\");\r\n            this.setState({\r\n                phoneNumber: null\r\n            })\r\n\r\n        }\r\n        else {\r\n            fetch(`${API_URL}/profile/phone`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token'),\r\n                    'content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(\r\n                    {\r\n                        phone: this.unFormatPhoneNumber(this.state.phoneNumber)\r\n                    }\r\n                )\r\n            }).then(() => this.getPhoneNumber())\r\n        }\r\n    }\r\n\r\n    formatPhoneNumber = (phoneNumberString) => {\r\n        console.log(\"AA\",phoneNumberString)\r\n        let cleaned = ('' + phoneNumberString).replace(/\\D/g, '')\r\n        let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\r\n        if (match) {\r\n            return '(' + match[1] + ') ' + match[2] + '-' + match[3]\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    unFormatPhoneNumber = (phoneNumberString) => {\r\n        var p = '';\r\n        if(phoneNumberString.length===10){\r\n            p=phoneNumberString;\r\n        }\r\n        else {\r\n            var j = 0;\r\n            for (j = 0; j < phoneNumberString.length; j++) {\r\n                var char = phoneNumberString.charAt(j);\r\n                if(char>='0' && char<='9'){\r\n                    p+=phoneNumberString.charAt(j);\r\n                }\r\n            }\r\n        }\r\n         console.log(\"BB\",p);\r\n        return p;\r\n    }\r\n\r\n    deletePhoneNumber = () => {\r\n        fetch(`${API_URL}/profile/phone`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': this.state.dashboardToken,\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then( () => {\r\n                 this.getPhoneNumber()\r\n            })\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        // this.unFormatPhoneNumber('(666) 555-4454')\r\n        await this.setState({\r\n            dashboardToken: localStorage.getItem('token')\r\n        })\r\n        await this.getPhoneNumber();\r\n    }\r\n\r\n\r\n    getPhoneNumber = () => {\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': this.state.dashboardToken\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                phoneNumber: results.phone !== \"\" ? results.phone: null\r\n            }))\r\n            .then(() => this.setState({\r\n                p: this.formatPhoneNumber(this.state.phoneNumber)\r\n            }))\r\n    }\r\n\r\n    changeEdit = () => {\r\n        if (this.state.edit === false)\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        else\r\n            this.setState({\r\n                edit: false\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            // <div>\r\n            //     {this.state.phoneNumber}\r\n            // </div>\r\n\r\n\r\n            <div>\r\n                {this.state.edit === false &&\r\n                <div className=\"col list-group\">\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"container row\">\r\n                            {!this.state.phoneNumber &&\r\n                            <div className=\"col-lg-2\"><i>No Phone Number Given</i></div>\r\n                            }\r\n                            {this.state.phoneNumber &&\r\n\r\n                            <div className=\"col-lg-2\">\r\n\r\n                                <i>{this.state.p}</i>\r\n                            </div>\r\n                            }\r\n\r\n                            <div className=\"col-lg-2\">\r\n                                {!this.state.phoneNumber &&\r\n                                <button\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            edit: true\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    className=\"btn btn-danger\">\r\n                                    Add Phone Number\r\n                                </button>\r\n                                }\r\n                                {this.state.phoneNumber &&\r\n                                <button\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            edit: true\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    className=\"btn btn-danger\">\r\n                                    Edit Phone Number\r\n                                </button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n                {this.state.edit === true &&\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        <div className=\"col-lg-2\">\r\n                            <MaskedInput\r\n                                mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n                                guide\r\n                                showMasked\r\n\r\n                                className=\"nav-item ml-auto form-control\"\r\n\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            phoneNumber: e.target.value,\r\n                                        }\r\n                                    )}\r\n                                value={this.state.phoneNumber}\r\n                            />\r\n\r\n                            {/*<MaskedInput*/}\r\n                            {/*    mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}*/}\r\n                            {/*    guide*/}\r\n                            {/*    */}\r\n                            {/*    value={this.state.phoneNumber}*/}\r\n                            {/*/>*/}\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={async () => {\r\n                                    await this.setState({\r\n                                        edit: false\r\n                                    })\r\n                                    await this.addPhoneNumber()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                Save\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={async () => {\r\n                                    await this.setState({\r\n                                        edit: false\r\n                                    })\r\n                                    await this.deletePhoneNumber()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                Delete\r\n\r\n                            </button>\r\n                        </div>\r\n                        {/*<div className=\"col-lg-1\">*/}\r\n                        {/*    <button*/}\r\n                        {/*        onClick={async () => {*/}\r\n                        {/*            await this.setState({*/}\r\n                        {/*                edit: false*/}\r\n                        {/*            })*/}\r\n                        {/*            await this.deletephoneNumber()*/}\r\n                        {/*        }*/}\r\n                        {/*        }*/}\r\n                        {/*        className=\"btn btn-danger\"*/}\r\n                        {/*    >*/}\r\n                        {/*        Delete*/}\r\n                        {/*    </button>*/}\r\n\r\n\r\n                        {/*</div>*/}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default phoneNumberComponent","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\nvar config={\r\n    apiKey: \"AIzaSyBeMKAtl4ZQucjfs6CpGrALxLfzbR-x_wI\",\r\n    authDomain: \"ecommerceweb-8831e.firebaseapp.com\",\r\n    databaseURL: \"https://ecommerceweb-8831e.firebaseio.com\",\r\n    projectId: \"ecommerceweb-8831e\",\r\n    storageBucket: \"ecommerceweb-8831e.appspot.com\",\r\n    messagingSenderId: \"314743947882\",\r\n    appId: \"1:314743947882:web:46d3c02d6dce8c65\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst storage=firebase.storage();\r\n\r\nexport {\r\n    storage, firebase as default\r\n}\r\n","import React from \"react\";\r\n\r\nconst ImageComponent = ({imageUrl}) => {\r\n    return (\r\n        <img style={{height : 130, width : 100}}\r\n             src={imageUrl}\r\n             alt=\"new\"\r\n        />\r\n    )\r\n}\r\nexport default ImageComponent\r\n","import React from \"react\";\r\nimport ExperienceTableComponent from \"./ExperienceTableComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport EducationTableComponent from \"./EducationTableComponent\";\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\nimport GitHubDashboard from \"./GitHubDashboard\";\r\nimport PhoneNumberComponent from \"./PhoneNumberComponent\";\r\nimport axios from 'axios';\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport {storage} from '../firebase_config';\r\nimport firebase from 'firebase/app';\r\nimport ImageComponent from \"./ImageComponent\";\r\nclass DashboardContainer extends React.Component {\r\n    state = {\r\n        user: {name: ''},\r\n        experiences: [],\r\n        dashboardToken: '',\r\n        image: '',\r\n    }\r\n    handleUploadSuccess = (filename) => {\r\n        storage.ref('Uploaded_Images').child(filename).getDownloadURL().then(url => {\r\n            let newA = url;\r\n            console.log(newA);\r\n            this.setState({\r\n                              image: newA\r\n                          })\r\n            console.log(this.state.image);\r\n        })\r\n    }\r\n\r\n    saveImage = () => {\r\n        fetch(`http://localhost:3002/codebook/profile/image`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    image: this.state.image\r\n                }\r\n            )\r\n        }).then(() => console.log(\"after fetch: \", this.state.image ))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.dashboardToken = localStorage.getItem('token')\r\n        console.log(\"Dashboard token: \", this.state.dashboardToken)\r\n        {\r\n            this.state.dashboardToken === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': '' + this.state.dashboardToken\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                                               user: results.user,\r\n                                               experiences: results.experience,\r\n                                               image: results.image\r\n                                           }))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarInSessionComponent/>\r\n                <div className=\"container\">\r\n                    <h2 className=\"large\">Dashboard</h2>\r\n                    <p className=\"lead\">\r\n                        <i className=\"fas fa-child\"> </i>\r\n                        Welcome, {this.state.user.name}</p>\r\n                </div>\r\n                <br/>\r\n\r\n                <div className=\"container\">\r\n                    <h4>Add an Image</h4>\r\n                    <br/>\r\n                    <FileUploader\r\n\r\n                        accept=\"image/*\"\r\n                        name='image'\r\n                        storageRef={firebase.storage().ref('Uploaded_Images')}\r\n                        onUploadSuccess={this.handleUploadSuccess}\r\n                    />\r\n                    <br/>\r\n                    <button className=\"btn btn-success\" onClick={() => this.saveImage()}>Save Image</button>\r\n                </div>\r\n\r\n                {   this.state.image &&\r\n                    <div className=\"container\">\r\n                        <ImageComponent\r\n                            imageUrl={this.state.image}/>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"container\">\r\n                    <h2 className=\"my-2\">Phone Number</h2>\r\n                    <PhoneNumberComponent\r\n                        githubUsername={this.props.githubUsername}\r\n                        user={this.state.user}\r\n                    />\r\n                </div>\r\n                <div className=\"container\">\r\n                    <h2 className=\"my-2\">GitHub Username</h2>\r\n                    <GitHubDashboard\r\n                        githubUsername={this.props.githubUsername}\r\n                        user={this.state.user}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <h2 className=\"my-2\">Experience Credentials</h2>\r\n                    <ExperienceTableComponent\r\n                        experienceId={this.props.experienceId}\r\n                        user={this.state.user}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <h2 className=\"my-2\">Education Credentials</h2>\r\n                    <EducationTableComponent\r\n                        educationId={this.props.educationId}\r\n                        user={this.state.user}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DashboardContainer\r\n// const stateToPropertyMapper = (state) => {\r\n// }\r\n// const dispatchToPropertyMapper = (dispatch) => {\r\n// }\r\n// export default connect(stateToPropertyMapper, dispatchToPropertyMapper)\r\n// (DashboardContainer)\r\n","const initialState = {\r\n    token : localStorage.getItem('token'),\r\n    isSession : false\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    // console.log(\"AA\",action.token)\r\n    switch (action.type) {\r\n\r\n        case \"ADD_TOKEN\": {\r\n            console.log(\"token in reducer: \", action.token)\r\n            localStorage.setItem('token', action.token)\r\n            return {\r\n                token: localStorage.getItem('token'),\r\n                isSession: true\r\n            }\r\n        }\r\n        case \"REMOVE_TOKEN\":\r\n            return {\r\n                token: null,\r\n                isSession: false\r\n            }\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer\r\n","import React, {Component, Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport img1 from '../img/showcase.jpg';\r\nimport Moment from 'react-moment';\r\nimport axios from \"axios\";\r\nimport './main.css';\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass NeoPostItem extends Component {\r\n\r\n    constructor(props) {\r\n        console.log(props)\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        likeNumber: this.props.likes.length,\r\n        commentsNumber: this.props.comments.length,\r\n        show: true,\r\n        showDelete: this.props.showDelete,\r\n        token: '',\r\n        likeStatus: false,\r\n        userId: this.props.id,\r\n        image: '',\r\n        currentUser: '',\r\n        name: this.props.name\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if(prevProps.name!==this.props.name){\r\n    //         console.log(this.props.name)\r\n    //     }\r\n    //     console.log(\"hello\")\r\n    // }\r\n\r\n    async componentDidMount() {\r\n        {\r\n            localStorage.getItem('token') === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n\r\n        this.setState({\r\n                          token: localStorage.getItem('token')\r\n                      })\r\n\r\n       await fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token')\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                                               currentUser: results.user,\r\n                                           }))\r\n\r\n        // await fetch(`${API_URL}/profile/user/${this.props.id}`)\r\n        //     .then(response => response.json())\r\n        //     .then(res =>{\r\n        //         console.log(\"Image \"+res.user.name)\r\n        //\r\n        //         this.setState({\r\n        //                           image: res.image\r\n        //                           // name: res.user.name\r\n        //                       })})\r\n    }\r\n\r\n    // getImageById = async () => {\r\n    //     await this.setImageUrl();\r\n    // }\r\n    //\r\n    // // setUserId = () => {\r\n    // //     this.setState({\r\n    // //                       userId: this.props.user._id\r\n    // //                   })\r\n    // // }\r\n    //\r\n    // setImageUrl = () => {\r\n    //\r\n    // }\r\n\r\n    handleLike = () => {\r\n        fetch(`${API_URL}/posts/like/${this.props._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(res => {\r\n                      if (res) {\r\n                          if (res.status !== 200) {\r\n                              this.setState({\r\n                                                likeStatus: true\r\n                                            })\r\n                          } else {\r\n                              this.setState({\r\n                                                likeNumber: this.state.likeNumber + 1,\r\n                                            })\r\n                          }\r\n                          setTimeout(function () {\r\n                              this.setState({likeStatus: false});\r\n                          }.bind(this), 3000);\r\n                      }\r\n                  }\r\n            )\r\n    }\r\n\r\n    handleUnlike = () => {\r\n        fetch(`${API_URL}/posts/unlike/${this.props._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(res => {\r\n                      if (res) {\r\n                          this.setState({\r\n                                            likeNumber: this.state.likeNumber - 1\r\n                                        })\r\n                      }\r\n                  }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.show ?\r\n            <div>\r\n                {this.state.likeStatus && <div className=\"alert alert-danger\" role=\"alert\">\r\n                    You have already liked this post\r\n                </div>}\r\n                <div className='post bg-white p-1 my-1'>\r\n                    <div>\r\n                        <Link>\r\n                            <img style={{height: 130, width: 100}}\r\n                                 src={this.props.image}\r\n                                 alt=''/>\r\n                            <h4>{this.props.name}</h4>\r\n                            {/*<h3>{this.state.image}</h3>*/}\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <p className='my-1'>{this.props.text}</p>\r\n                        <p className='post-date'>\r\n                            Posted on <Moment format='YYYY/MM/DD'>{this.props.date}</Moment>\r\n                        </p>\r\n                        <Fragment>\r\n                            <button\r\n                                onClick={this.handleLike}\r\n                                type='button'\r\n                                className='btn btn-light'\r\n                            >\r\n                                <i className='fa fa-thumbs-up'/>\r\n                                <span>{this.state.likeNumber > 0 &&\r\n                                       <span>{this.state.likeNumber}</span>}</span>\r\n                            </button>\r\n                            <button\r\n                                onClick={this.handleUnlike}\r\n                                type='button'\r\n                                className='btn btn-light'\r\n                            >\r\n                                <i className='fa fa-thumbs-down'/>\r\n                            </button>\r\n                            <Link to={'/posts/' + this.props._id} className='btn btn-primary'>\r\n                                Comment {this.state.showDelete ? <span>{this.state.commentsNumber\r\n                                                                        > 0 &&\r\n                                                                        <span>{this.state.commentsNumber}</span>}</span>\r\n                                                               : null}\r\n                            </Link>\r\n                            {/*{!auth.loading && user === auth.user._id && (*/}\r\n                            {this.props.user._id === this.state.currentUser._id &&\r\n                             <button\r\n                                 onClick={() => this.props.delete(this.props._id)}\r\n                                 type='button'\r\n                                 className='btn btn-danger'\r\n                             >\r\n                                 <i className='fa fa-times'/>\r\n                             </button>\r\n                            }\r\n                        </Fragment>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                            :\r\n            null\r\n        );\r\n    }\r\n}\r\n\r\nexport default NeoPostItem;\r\n","import React, {Component, Fragment} from 'react';\r\nimport NeoPostItem from \"./NeoPostItem\";\r\nimport axios from \"axios\";\r\nimport './main.css';\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass NeoPosts extends Component {\r\n    state = {\r\n        posts: [],\r\n        inputPost: '',\r\n        text: '',\r\n        token: '',\r\n        postStatus:false,\r\n    }\r\n\r\n    deletePost = async (id) => {\r\n\r\n        await fetch(`${API_URL}/posts/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': this.state.token\r\n            }\r\n        })\r\n\r\n        // await axios.delete('http://localhost:3002/codebook/posts/' + id).then((res) => {\r\n        //     console.log(res)\r\n        // });\r\n\r\n\r\n        let postsData = await axios.get(`${API_URL}/posts`,\r\n            {\r\n                headers: {\r\n                    \"x-auth-token\": localStorage.getItem('token')\r\n                }\r\n            })\r\n        console.log(postsData)\r\n        this.setState({\r\n            posts: postsData.data\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        {\r\n            localStorage.getItem('token') === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n\r\n        this.setState({\r\n            token : localStorage.getItem('token')\r\n        })\r\n        let postsData = await axios.get(`${API_URL}/posts`,\r\n            {\r\n                headers: {\r\n                    \"x-auth-token\": localStorage.getItem('token'),\r\n                }\r\n            })\r\n        console.log(postsData)\r\n        this.setState({\r\n            posts: postsData.data\r\n        })\r\n    }\r\n\r\n    // async componentDidUpdate  (prevProps, prevState, snapshot) {\r\n    //     if(prevState.posts!==this.state.posts) {\r\n    //         let postsData = await axios.get('http://localhost:3002/codebook/posts',\r\n    //             {\r\n    //                 headers: {\r\n    //                     \"x-auth-token\": 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWU5NGM1ZGE3NTJiNjMwMDA0NGUxYTk0In0sImlhdCI6MTU4NjgwODI4MiwiZXhwIjoxNTg3MTY4MjgyfQ.c5VZhqxOpUogyqrPNL9rM-yDIP5GhXT6upMmDTvOqHI'\r\n    //                 }\r\n    //             });\r\n    //\r\n    //         this.setState({\r\n    //             posts: postsData.data\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    submitPost = async () => {\r\n        // console.log(\"NEO token\", this.state.token)\r\n        await fetch(`${API_URL}/posts`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'x-auth-token': this.state.token,\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {text : this.state.text}\r\n            )\r\n        })\r\n\r\n        const postsData = await axios.get(`${API_URL}/posts`,\r\n            {\r\n                headers: {\r\n                    \"x-auth-token\": this.state.token\r\n                }\r\n            });\r\n        console.log(postsData);\r\n        await this.setState({\r\n            posts: postsData.data,\r\n            text: '',\r\n            postStatus:true\r\n        })\r\n        // setTimeout(function(){\r\n        //     this.setState({postStatus:false});\r\n        // }.bind(this),3000);\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarInSessionComponent/>\r\n                <div class=\"container\">\r\n                    <div>{this.state.postStatus&&<div  className=\"alert alert-success\" role=\"alert\">Post Created Successfully</div>}</div>\r\n                    <h1 className='large text-primary'>Posts</h1>\r\n                    <p className='lead'>\r\n                        <i className='fa fa-user'/> Welcome to the community\r\n                    </p>\r\n                    <div className='post-form'>\r\n                        <div className='bg-primary p'>\r\n                            <h3>Say Something...</h3>\r\n                        </div>\r\n                        <form\r\n                            className='form my-1'\r\n                            onSubmit={e => {\r\n                                e.preventDefault();\r\n                            }}\r\n                        >\r\n        <textarea\r\n            name='text'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Create a post'\r\n            value={this.state.text}\r\n            required\r\n            onChange={(e) => this.handleChange(e)}\r\n        />\r\n                            <button type='submit' className='btn btn-dark my-1' onClick={() => this.submitPost()}>\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    {/*{this.state.posts && this.state.posts.map(post => (*/}\r\n                    {/*    <li>{post.user.image}</li>*/}\r\n                    {/*))}*/}\r\n                    {console.log(\"posts\", this.state.posts)}\r\n                    {this.state.posts && this.state.posts.map(post => (\r\n                        <NeoPostItem currentPost = {post} image={post.user.image} name={post.user.name} id={post.user._id} showDelete={true} delete={this.deletePost} {...post} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NeoPosts;\r\n","\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass CommentItem extends Component {\r\n\r\n    state={\r\n        show:true,\r\n        userName:''\r\n    }\r\n\r\n    handleDeleteComment =()=>{\r\n        axios.delete(`${API_URL}/posts/comment/${this.props.postId}/${this.props._id}`,{\r\n            headers:{\r\n                \"x-auth-token\": localStorage.getItem('token')\r\n            }\r\n        }).then((res)=>{\r\n            if(res){\r\n                this.setState({\r\n                                  show:false\r\n                              })\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n            axios.get(`${API_URL}/users/id/${this.props.user}`,{\r\n                headers:{\r\n                    \"x-auth-token\": localStorage.getItem('token')\r\n                }\r\n            }).then((res)=>{\r\n            this.setState({\r\n                userName:res.data.name\r\n                          })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.show?\r\n            <div className='post bg-white p-1 my-1'>\r\n                <div>\r\n                    <Link >\r\n                        <h4>{this.state.userName}</h4>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <p className='my-1'>{this.props.text}</p>\r\n                    <p className='post-date'>\r\n                        Posted on {this.props.date}\r\n                    </p>\r\n                    <button\r\n                        onClick={this.handleDeleteComment}\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                    >\r\n                        <i className='fa fa-times' />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            :\r\n            null\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentItem;\r\n","import React, {Component,Fragment} from 'react';\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport NeoPostItem from \"./NeoPostItem\";\r\nimport CommentItem from \"./CommentItem\";\r\nimport {API_URL} from \"../common/constants\";\r\nclass NeoPostDetail extends Component {\r\n\r\n    state = {\r\n        id: this.props.match.params.id,\r\n        post:{},\r\n        comment:'',\r\n        comments:[],\r\n        commentNumber:0\r\n    }\r\n\r\n    handleComment = (e) =>{\r\n        this.setState({\r\n            comment:e.target.value\r\n        })\r\n    }\r\n\r\n     handlePostComponent= async(comment)=>{\r\n\r\n        await fetch(`${API_URL}/posts/comment/${this.state.post._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({text:comment})\r\n        });\r\n\r\n         let postData = await axios.get(`${API_URL}/posts/'${this.state.post._id}`,{\r\n             headers:{\r\n                 \"x-auth-token\": localStorage.getItem('token')\r\n             }\r\n         });\r\n         console.log(postData)\r\n         this.setState({\r\n             comments:postData,\r\n             comment:''\r\n         })\r\n    }\r\n\r\n    handleDeleteOfComment=()=>{\r\n        this.setState({\r\n            commentNumber:this.state.commentNumber-1\r\n        })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        let postData = await axios.get(`${API_URL}/posts/${this.state.id}`,{\r\n            headers:{\r\n                \"x-auth-token\": localStorage.getItem('token')\r\n            }\r\n        })\r\n\r\n        let data = [];\r\n\r\n        data.push(postData.data);\r\n\r\n        this.setState({\r\n            post:data[0],\r\n            comments:data[0].comments\r\n        })\r\n        console.log(this.state.post)\r\n        // console.log('here 3'+this.state.comments.length);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <Fragment>\r\n                    <Link to=\"/posts\" className=\"btn\">\r\n                        Back To Posts\r\n                    </Link>\r\n\r\n                    {/*{console.log(...this.state.post)}*/}\r\n\r\n                    {this.state.post.likes &&\r\n                        <NeoPostItem showDelete={false} likes={this.state.post.likes}\r\n                                     _id={this.state.post._id}\r\n                                     user={this.state.post.user}\r\n                                     comments={this.state.post.comments}\r\n                                     text={this.state.post.text}\r\n                                     date={this.state.post.date}\r\n                        /> }\r\n\r\n                    <div className='post-form'>\r\n                        <div className='bg-prim ary p'>\r\n                            <h3>Leave a Comment</h3>\r\n                        </div>\r\n                        <form\r\n                            className='form my-1'>\r\n        <textarea\r\n            name='text'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Comment the post'\r\n            value={this.state.comment}\r\n            onChange={e => this.handleComment(e)}\r\n            required\r\n        />\r\n                           <input type='submit' className='btn btn-dark my-1' value='Submit' onClick={()=>this.handlePostComponent(this.state.comment)} />\r\n                        </form>\r\n\r\n\r\n                        {/*{this.state.comments && this.state.comments.map(comment=>(*/}\r\n                        {/*    <li>{comment.text}</li>*/}\r\n                        {/*))}*/}\r\n\r\n                        {this.state.comments && this.state.comments.length>0 &&  this.state.comments.map(com=>(\r\n                            <CommentItem postId={this.state.id} _id={com._id}  text={com.text} user={com.user} {...com} />\r\n\r\n                        ))}\r\n\r\n                    </div>\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NeoPostDetail;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class NavBarAdmin extends React.Component {\r\n\r\n\r\n    state = {\r\n        selectedTab: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <a href=\"#\" className=\"navbar-brand\">\r\n                        <Link to={\"/\"}>\r\n                            <i className=\"fas fa-code-branch\"/>\r\n                            GeeksHub\r\n                        </Link>\r\n                    </a>\r\n\r\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar-menu\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbar-menu\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/admin-users\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Administer Users</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/admin-posts\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Administer Posts</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/sign-in\"}>\r\n                                    <span  className=\"nav-link wbdv-page-tab\"\r\n                                           onClick={ async () => {\r\n                                               localStorage.clear()\r\n\r\n                                           }\r\n                                           }\r\n                                    >Sign Out</span>\r\n                                </Link>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {API_URL, LOCALHOST_URL} from \"../common/constants\";\r\nimport NavBarAdmin from \"../Component/NavBar/NavBarAdmin\";\r\n\r\nclass AdminUsers extends React.Component {\r\n\r\n    state = {\r\n        dashboardToken: '',\r\n        user: {\r\n            id: '',\r\n            name: '',\r\n            image: ''\r\n        },\r\n        users: []\r\n    }\r\n\r\n    deleteUserAndProfile = (userId) => {\r\n        fetch(`${API_URL}/profile/${userId}`,{\r\n            method: \"DELETE\",\r\n        }).then(() => this.getUsers())\r\n    }\r\n\r\n    getUsers = () => {\r\n        fetch(`${API_URL}/users/all`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState({\r\n                users: res\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.dashboardToken = localStorage.getItem('token')\r\n        console.log(\"Dashboard token: \", this.state.dashboardToken)\r\n        {\r\n            this.state.dashboardToken === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n        fetch(`${LOCALHOST_URL}/profile/me`, {\r\n            headers: {\r\n                'x-auth-token': this.state.dashboardToken,\r\n                'content-type': 'application/json'\r\n            },\r\n        }).then(res => res.json())\r\n            .then(res =>\r\n                this.setState({\r\n                    user: res.user\r\n                })\r\n            ).then(() => {\r\n            {\r\n                this.state.user.name !== 'Alice' &&\r\n                this.props.history.push('/dashboard')\r\n\r\n            }\r\n\r\n        })\r\n\r\n        this.getUsers()\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarAdmin/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"main-box no-header clearfix bg-color-alice-blue\">\r\n                                <div className=\"main-box-body clearfix\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table user-list bg-color-alice-blue\">\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th><span>User</span></th>\r\n                                                <th><span>Created</span></th>\r\n                                                <th><span>Email</span></th>\r\n                                                <th>&nbsp;</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                            {\r\n                                                this.state.users.map(user =>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <img src={user.image}\r\n                                                                 alt=\"\"/>\r\n                                                            <span className=\"user-link\">{user.name}</span>\r\n                                                            {user.name !== 'Alice' &&\r\n                                                            <span className=\"user-subhead\">Geek</span>\r\n                                                            }\r\n                                                            {user.name === 'Alice' &&\r\n                                                            <span className=\"user-subhead\">Admin</span>\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td>{user.date.substring(0, 10)}</td>\r\n\r\n                                                        <td>\r\n                                                            <h6>{user.email}</h6>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {/*                    <a href=\"#\" className=\"table-link\">*/}\r\n                                                            {/*<span className=\"fa-stack\">*/}\r\n                                                            {/*    <i className=\"fa fa-square fa-stack-2x\"/>*/}\r\n                                                            {/*    <i className=\"fa fa-search-plus fa-stack-1x fa-inverse\"/>*/}\r\n                                                            {/*</span>*/}\r\n                                                            {/*                    </a>*/}\r\n                                                            {/*                    <a href=\"#\" className=\"table-link\">*/}\r\n                                                            {/*<span className=\"fa-stack\">*/}\r\n                                                            {/*    <i className=\"fa fa-square fa-stack-2x\"/>*/}\r\n                                                            {/*    <i className=\"fa fa-pencil fa-stack-1x fa-inverse\"/>*/}\r\n                                                            {/*</span>*/}\r\n                                                            {/*                    </a>*/}\r\n\r\n                                                            {   user.name !== 'Alice' &&\r\n                                                            <span className=\"fa-stack cursor-pointer\"\r\n                                                                  onClick={() => this.deleteUserAndProfile(user._id)}\r\n                                                            >\r\n                                                                      <i className=\"fas fa-trash-alt btn-lg btn-danger\"/>\r\n                                                                </span>\r\n                                                            }\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n}\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n}\r\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(AdminUsers)\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport NavBarAdmin from \"../Component/NavBar/NavBarAdmin\";\r\n\r\nclass AdminPosts extends React.Component {\r\n\r\n    state = {\r\n        dashboardToken: '',\r\n        text: '',\r\n        user: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        posts: [],\r\n        edit: false,\r\n        selectedPost: '',\r\n    }\r\n\r\n    addPost = () => {\r\n        fetch(`${API_URL}/posts`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    text: this.state.text\r\n                }\r\n            )\r\n        }).then(() => this.setState({\r\n            text: ''\r\n        }))\r\n            .then(() => this.getPosts())\r\n\r\n    }\r\n\r\n    updatePost = (postId) => {\r\n        fetch(`${API_URL}/posts/admin/update/${postId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    text: this.state.text\r\n                }\r\n            )\r\n        }).then(() => this.setState({\r\n            text: '',\r\n            edit: false,\r\n            selectedPost: ''\r\n        }))\r\n            .then(() => this.getPosts())\r\n    }\r\n    deletePost = (postId) => {\r\n        fetch(`${API_URL}/posts/admin/delete/${postId}`, {\r\n            method: \"DELETE\",\r\n        }).then(() => this.getPosts())\r\n    }\r\n\r\n    getPosts = () => {\r\n        fetch(`${API_URL}/posts`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState({\r\n                posts: res\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.dashboardToken = localStorage.getItem('token')\r\n        console.log(\"Dashboard token: \", this.state.dashboardToken)\r\n        {\r\n            this.state.dashboardToken === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n        fetch(`${API_URL}/profile/me`, {\r\n            headers: {\r\n                'x-auth-token': this.state.dashboardToken,\r\n                'content-type': 'application/json'\r\n            },\r\n        }).then(res => res.json())\r\n            .then(res =>\r\n                this.setState({\r\n                    user: res.user\r\n                })\r\n            ).then(() => {\r\n            {\r\n                this.state.user.name !== 'Alice' &&\r\n                this.props.history.push('/dashboard')\r\n\r\n            }\r\n\r\n        })\r\n\r\n        this.getPosts()\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarAdmin/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Post Content\"\r\n                                onChange={async (e) => {\r\n                                    const n = e.target.value;\r\n                                    await this.setState({\r\n                                        text: n\r\n                                    })\r\n                                }\r\n                                }\r\n\r\n                                id=\"vehicle1\" name=\"vehicle1\"\r\n                                value={this.state.text}/>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-12\">\r\n                            <br/>\r\n                            <span\r\n                                onClick={() => this.addPost()}\r\n                                className=\"btn btn-danger\">Add Post</span>\r\n                            <br/>\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"main-box no-header clearfix bg-color-alice-blue\">\r\n                                <div className=\"main-box-body clearfix\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table user-list bg-color-alice-blue\">\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th><span>Post</span></th>\r\n                                                <th><span>Posted By</span></th>\r\n                                                <th><span>Date</span></th>\r\n                                                <th>&nbsp;</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                            {\r\n                                                this.state.posts.map(post =>\r\n\r\n                                                    <tr>\r\n                                                        {(!this.state.edit || this.state.selectedPost !== post._id) &&\r\n                                                        <td>\r\n                                                            <div className=\"col-sm-12\">\r\n                                                                <p><small>{post.text}</small></p>\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-2\">\r\n                                                                <span\r\n                                                                    onClick={() => this.setState({\r\n                                                                        edit: true,\r\n                                                                        selectedPost: post._id,\r\n                                                                        text: post.text\r\n                                                                    })}\r\n                                                                    className=\"btn btn-danger\">Edit</span>\r\n                                                            </div>\r\n\r\n                                                        </td>\r\n                                                        }\r\n                                                        {\r\n                                                            this.state.edit && this.state.selectedPost === post._id &&\r\n                                                            <td>\r\n                                                                <div className=\"col-sm-12\">\r\n                                                                    <input\r\n                                                                        className=\"nav-item ml-auto form-control\"\r\n                                                                        placeholder=\"Input New Post\"\r\n                                                                        onChange={async (e) => {\r\n                                                                            const n = e.target.value;\r\n                                                                            await this.setState({\r\n                                                                                    ...this.state,\r\n                                                                                    text: n\r\n                                                                                }\r\n                                                                            )\r\n                                                                        }}\r\n                                                                        value={this.state.text}\r\n                                                                    />\r\n                                                                </div>\r\n                                                                <br/>\r\n\r\n                                                                <div className=\"col-sm-2\">\r\n                                                                <span\r\n                                                                    onClick={async () => {\r\n                                                                        await this.updatePost(post._id)\r\n                                                                        await this.setState({\r\n                                                                            edit: false,\r\n                                                                            selectedPost: '',\r\n                                                                            text: ''\r\n                                                                        })\r\n                                                                    }\r\n                                                                    }\r\n                                                                    className=\"btn btn-success\">Save</span>\r\n                                                                </div>\r\n\r\n                                                            </td>\r\n                                                        }\r\n\r\n                                                        <td>\r\n                                                            <img src={post.user.image}\r\n                                                                 alt=\"\"/>\r\n                                                            <span className=\"user-link\">{post.user.name}</span>\r\n                                                            <span className=\"user-subhead\">{post.user.email}</span>\r\n                                                        </td>\r\n                                                        <td>{post.date.substring(0, 10)}</td>\r\n\r\n                                                        <td>\r\n\r\n                                                            <span className=\"fa-stack cursor-pointer\"\r\n                                                                  onClick={() => this.deletePost(post._id)}\r\n                                                            >\r\n                                                                      <i className=\"fas fa-trash-alt btn-lg btn-danger\"/>\r\n                                                                </span>\r\n\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n}\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n}\r\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(AdminPosts)\r\n","import React from \"react\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport SocialMediaClient from \"./Prototype/social-media-client\";\r\nimport SocialMediaUserDetails from \"./Prototype/social-media-user-details\";\r\nimport ProfileDetailsContainer from \"./Profile/ProfileDetailsContainer\";\r\nimport GitHubRepositories from \"./Profile/GitHubRepositories\";\r\nimport ProfilesContainer from \"./Profile/ProfilesContainer\";\r\nimport LandingComponent from \"./Component/LandingComponent\";\r\nimport SignUpComponent from \"./SignUp/SignUpComponent\";\r\nimport SignInComponent from \"./SignIn/SignInComponent\";\r\nimport FailureComponent from \"./Temporary/failure\";\r\nimport SuccessComponent from \"./Temporary/success\";\r\nimport DashboardContainer from \"./Dashboard/DashboardContainer\";\r\nimport authReducer from \"./Reducer/auth.reducer\"\r\nimport NeoPosts from \"./Post/NeoPosts\";\r\nimport NeoPostDetail from \"./Post/NeoPostDetail\";\r\nimport AdminUsers from \"./Admin/admin\";\r\nimport AdminPosts from \"./Admin/adminposts\";\r\n\r\n\r\nconst store = createStore(authReducer)\r\n\r\nclass SocialMediaManagerComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router basename=\"/codebook-client/\">\r\n                    <Route\r\n                        path=\"/\"\r\n                        exact={true}\r\n                        component={LandingComponent}\r\n                    >\r\n                    </Route>\r\n                        <Route path=\"/posts\" exact component={NeoPosts} >\r\n\r\n                        </Route>\r\n                        <Route path=\"/posts/:id\" exact component={NeoPostDetail} >\r\n\r\n                        </Route>\r\n\r\n\r\n\r\n                    <Route\r\n                        path=\"/user-details/:userId\"\r\n                        exact={true}\r\n                        render={\r\n                            (props) =>\r\n                                <SocialMediaUserDetails\r\n                                    userId={props.match.params.userId}\r\n                                />\r\n                        }\r\n                    >\r\n                    </Route>\r\n\r\n                    <Route\r\n                        path=\"/profiles/:userId\"\r\n                        exact={true}\r\n                        render={\r\n                            (props) =>\r\n                                <ProfileDetailsContainer\r\n                                    userId = {props.match.params.userId}\r\n                                    {...props}\r\n                                />\r\n                        }\r\n                    >\r\n                    </Route>\r\n\r\n                    <Route\r\n                        path=\"/profiles/:profileId/github/:repoName\"\r\n                        exact={true}\r\n                        render={\r\n                            (props) =>\r\n                                <GitHubRepositories\r\n                                    profileId={props.match.params.profileId}\r\n                                    repoName={props.match.params.repoName}\r\n                                    {...props}\r\n                                />\r\n                        }\r\n                    >\r\n                    </Route>\r\n\r\n                    <Route\r\n                        path=\"/profiles\"\r\n                        exact={true}\r\n                        render={\r\n                            (props) =>\r\n                                <ProfilesContainer/>\r\n                        }\r\n                    >\r\n                    </Route>\r\n\r\n                    <Provider store={store}>\r\n\r\n                        <Route\r\n                            path=\"/success\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <SuccessComponent\r\n                                        email={props.match.params.email}\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/sign-in\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <SignUpComponent\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                            component={SignInComponent}\r\n                        >\r\n\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/admin-users\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <AdminUsers\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/admin-posts\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <AdminPosts\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/dashboard\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <DashboardContainer\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/dashboard/experience/:experienceId\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <DashboardContainer\r\n                                        experienceId = {props.match.params.experienceId}\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/dashboard/education/:educationId\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <DashboardContainer\r\n                                        educationId = {props.match.params.educationId}\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/dashboard/github/:githubUsername\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <DashboardContainer\r\n                                        githubUsername = {props.match.params.githubUsername}\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/sign-up\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <SignUpComponent\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n                    </Provider>\r\n\r\n\r\n\r\n                    <Route\r\n                        path=\"/failure\"\r\n                        exact={true}\r\n                        component={FailureComponent}\r\n                    >\r\n\r\n                    </Route>\r\n\r\n\r\n\r\n                </Router>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default SocialMediaManagerComponent\r\n\r\n","import React from 'react';\r\nimport SocialMediaManagerComponent from \"./SocialMediaManagerComponent\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <SocialMediaManagerComponent/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}