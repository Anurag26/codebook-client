{"version":3,"sources":["common/constants.js","images/person-holding-midnight-black-samsung-galaxy-s8-turn-on-near-1092671.jpg","Post/temp.js","images/landing-page-image.jpg","img/showcase.jpg","Prototype/social-media-user-details.js","Prototype/social-media-client.js","Component/NavBar/NavBarComponent.js","Component/NavBar/NavBarInSessionComponent.js","Profile/ProfileImageComponent.js","Profile/ProfileDetailsContainer.js","Profile/GitHubRepositories.js","Profile/ProfilesContainer.js","Component/LandingComponent.js","SignUp/SignUpComponent.js","SignIn/SignInComponent.js","Temporary/failure.js","Temporary/success.js","Dashboard/ExperienceTableComponent.js","Dashboard/EducationTableComponent.js","Dashboard/GitHubDashboard.js","Dashboard/PhoneNumberComponent.js","firebase_config.js","Dashboard/ImageComponent.js","Dashboard/DashboardContainer.js","Reducer/auth.reducer.js","Post/NeoPostItem.js","Post/NeoPosts.js","Post/CommentItem.js","Post/NeoPostDetail.js","Component/NavBar/NavBarAdmin.js","Admin/admin.js","Admin/adminposts.js","SocialMediaManagerComponent.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","LOCALHOST_URL","module","exports","axios","require","test","name","post","then","res","console","log","catch","err","SocialMediaUserDetails","React","Component","state","user","fetch","this","props","userId","response","json","results","setState","prevProps","prevState","snapshot","className","to","email","website","NavBarComponent","selectedTab","href","data-toggle","data-target","id","onClick","a","localStorage","clear","ProfileImageComponent","image","getImageById","style","height","width","src","alt","ProfileDetailsContainer","social","experience","education","followers","following","repos","componentDidMount","getRepos","githubusername","username","headers","handleFollow","method","getItem","handleUnFollow","backgroundColor","bio","class","length","map","exp","company","from","title","description","edu","school","degree","repo","_id","stargazers_count","ProfileComponent","skills","license","forks","profileId","repoName","language","parent","default_branch","updated_at","html_url","target","ProfilesContainer","users","nameToSearch","findAllUser","changeName","findUserByName","array","data","push","type","placeholder","onChange","e","value","float","marginLeft","key","LandingComponent","bkg_image_1","SignUpComponent","password","cpassword","token","register","alert","body","JSON","stringify","r","undefined","errors","error","msg","generateTokenAndSave","history","required","connect","dispatch","SignInComponent","alert_msg","login","setTimeout","bind","role","FailureComponent","SuccessComponent","ExperienceTableComponent","experiences","inputCompany","inputTitle","inputFrom","inputTo","inputDescription","current","updateCompany","updateTitle","updateFrom","updateTo","updateDescription","updateCurrent","edit","addExperience","getExperience","updateExperience","experienceId","deleteExperience","eid","changeEdit","n","readOnly","disabled","htmlFor","educationTableComponent","educations","inputSchool","inputDegree","updateSchool","updateDegree","addeducation","fieldofstudy","geteducation","updateeducation","educationId","deleteeducation","gitHubDashboard","githubUsername","dashboardToken","addGithubUsername","getGithubUsername","updateGithubUsername","deleteGithubUsername","phoneNumberComponent","phoneNumber","p","addPhoneNumber","unFormatPhoneNumber","phone","getPhoneNumber","formatPhoneNumber","phoneNumberString","match","replace","j","char","charAt","deletePhoneNumber","mask","guide","showMasked","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","ImageComponent","imageUrl","DashboardContainer","handleUploadSuccess","filename","ref","child","getDownloadURL","url","newA","saveImage","accept","storageRef","onUploadSuccess","PhoneNumberComponent","GitHubDashboard","EducationTableComponent","authReducer","action","setItem","isSession","NeoPostItem","likeNumber","likes","commentsNumber","comments","show","showDelete","likeStatus","currentUser","handleLike","status","handleUnlike","text","format","date","delete","NeoPosts","posts","inputPost","postStatus","deletePost","get","postsData","submitPost","handleChange","onSubmit","preventDefault","cols","rows","currentPost","CommentItem","userName","handleDeleteComment","postId","NeoPostDetail","params","comment","commentNumber","handleComment","handlePostComponent","postData","handleDeleteOfComment","com","NavBarAdmin","AdminUsers","deleteUserAndProfile","getUsers","substring","AdminPosts","selectedPost","addPost","getPosts","updatePost","store","createStore","SocialMediaManagerComponent","path","exact","component","render","App","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.366890f8.chunk.js","sourcesContent":["export const API_URL = \"https://cs5610-wbdv-final-server.herokuapp.com/codebook\"\r\nexport const LOCALHOST_URL = \"http://localhost:3002/codebook\"\r\n","module.exports = __webpack_public_path__ + \"static/media/person-holding-midnight-black-samsung-galaxy-s8-turn-on-near-1092671.f52822f0.jpg\";","import {API_URL} from \"../common/constants\";\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nfunction test(name){\r\n    axios.post(`${API_URL}/users/name`, {\r\n        \"name\":name\r\n    }).then(res=>console.log(res)).catch(err=>console.log(err))\r\n}\r\n\r\nexport default test;\r\n","module.exports = __webpack_public_path__ + \"static/media/landing-page-image.ddd0118e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/showcase.4b31330b.jpg\";","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class SocialMediaUserDetails extends React.Component {\r\n\r\n    state = {\r\n        user: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${this.props.userId}`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                user: results\r\n            }))\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.userId !== prevProps.userId) {\r\n            fetch(`https://jsonplaceholder.typicode.com/users/${this.props.userId}`)\r\n                .then(response => response.json())\r\n                .then(results => this.setState({\r\n                    user: results\r\n                }))\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <Link to={`/`}>\r\n                        <a className=\"nav-link cursor-pointer\">\r\n                            <i className=\"fas fa-times wbdv-course-editor wbdv-close\"/>\r\n                        </a>\r\n                    </Link>\r\n                    <span className=\"navbar-brand wbdv-course-title\">Social Media for Developers</span>\r\n                </nav>\r\n\r\n                <div className=\"container\">\r\n                    <h1>\r\n                        Details of {this.state.user.name}\r\n                    </h1>\r\n                    <h5>\r\n                        Email: {this.state.user.email}\r\n                    </h5>\r\n                    <h5>\r\n                        Website: {this.state.user.website}\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class SocialMediaClient extends React.Component {\r\n\r\n    state = {\r\n        users: [],\r\n        name: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                users: results\r\n            }))\r\n    }\r\n\r\n    searchUser = (name) => {\r\n        fetch(`https://jsonplaceholder.typicode.com/users?name=${name}`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                users: results\r\n            }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>\r\n                    Social Media Client List\r\n                </h1>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <input className=\"form-control\" placeholder=\"Enter First and Last Name\" value={this.state.title}\r\n                               onChange={(e) => this.setState({\r\n                                   name: e.target.value\r\n                               })}\r\n                        />\r\n                        <button\r\n                            onClick={() => this.searchUser(this.state.name)}\r\n                            className=\"btn btn-primary btn-block\">\r\n                            Search\r\n                        </button>\r\n                    </li>\r\n                    <br/>\r\n                    {\r\n                        this.state.users.map(user =>\r\n                                <div className=\"col-12 col-sm-6 col-md-4 col-lg-3\">\r\n                                    <Link to={`/user-details/${user.id}`}>\r\n                                        <div className=\"card card-body .wbdv-grid-card\" key={user.id}>\r\n                                            <h5 className=\"card-title\">\r\n                                                {user.name}\r\n                                            </h5>\r\n                                        </div>\r\n                                    </Link>\r\n                                    <br/>\r\n                                </div>\r\n                            // <li className=\"list-group-item\"\r\n                            //     key={user.id}>\r\n                            //\r\n                            // </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class NavBarComponent extends React.Component {\r\n\r\n\r\n    state = {\r\n        selectedTab: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <a href=\"#\" className=\"navbar-brand\">\r\n                        <Link to={\"/\"}>\r\n                            <i className=\"fas fa-code-branch\"/>\r\n                            GeeksHub\r\n                        </Link>\r\n                    </a>\r\n\r\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar-menu\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbar-menu\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/profiles\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Geeks</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/sign-in\"}>\r\n                                    <span href=\"#\" className=\"nav-link wbdv-page-tab\">Login</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/sign-up\"}>\r\n                                    <a href=\"#\" className=\"nav-link wbdv-page-tab\">Sign Up</a>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class NavBarComponent extends React.Component {\r\n\r\n\r\n    state = {\r\n        selectedTab: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <a href=\"#\" className=\"navbar-brand\">\r\n                        <Link to={\"/\"}>\r\n                            <i className=\"fas fa-code-branch\"/>\r\n                            GeeksHub\r\n                        </Link>\r\n                    </a>\r\n\r\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar-menu\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbar-menu\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/dashboard\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Dashboard</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/profiles\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Geeks</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/posts\"}>\r\n                                    <span href=\"#\" className=\"nav-link wbdv-page-tab\">Posts</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/sign-in\"}>\r\n                                    <span  className=\"nav-link wbdv-page-tab\"\r\n                                    onClick={ async () => {\r\n                                        localStorage.clear()\r\n\r\n                                    }\r\n                                    }\r\n                                    >Sign Out</span>\r\n                                </Link>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass ProfileImageComponent extends React.Component {\r\n\r\n    state = {\r\n        image: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getImageById(this.props.userId)\r\n    }\r\n\r\n    getImageById = () => {\r\n        fetch(`${API_URL}/profile/user/${this.props.userId}`)\r\n            .then(response => response.json())\r\n            .then(res => this.setState({\r\n                                           image: res.image\r\n                                       }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img style={{height : 130, width : 100}}\r\n                     src={this.state.image}\r\n                     alt=''/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileImageComponent\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\n\r\nimport ProfileImageComponent from \"./ProfileImageComponent\";\r\n\r\nexport default class ProfileDetailsContainer extends React.Component {\r\n\r\n    state = {\r\n        user: {user: {}, social: {}, experience: [], education: [], followers:[], following:[] },\r\n        repos: []\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await fetch(`${API_URL}/profile/user/${this.props.userId}`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                user: results\r\n            }))\r\n\r\n        await this.getRepos(this.state.user.githubusername)\r\n        await console.log(\"Name\", this.state.repos)\r\n    }\r\n\r\n    getRepos = (username) => {\r\n        fetch(`https://api.github.com/users/${username}/repos`, {\r\n            headers: {\r\n                'Authorization': 'token 862dd87f07b9ebce2fc3bad7d3496d3e54a4646b'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                repos: results\r\n            }))\r\n    }\r\n\r\n    //\r\n    // searchUser = (name) => {\r\n    //     fetch(`https://jsonplaceholder.typicode.com/users?name=${name}`)\r\n    //         .then(response => response.json())\r\n    //         .then(results => this.setState({\r\n    //             users: results\r\n    //         }))\r\n    // }\r\n\r\n    handleFollow = async () =>{\r\n        await fetch(`${API_URL}/profile/follow/${this.state.user.user.email}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n\r\n        await fetch(`${API_URL}/profile/user/${this.props.userId}`)\r\n                .then(response => response.json())\r\n                .then(results =>\r\n                    this.setState({\r\n                                      user: results\r\n                                  })\r\n                )\r\n\r\n    }\r\n\r\n    handleUnFollow = async () =>{\r\n        await fetch(`${API_URL}/profile/unfollow/${this.state.user.user.email}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n\r\n        await fetch(`${API_URL}/profile/user/${this.props.userId}`)\r\n            .then(response => response.json())\r\n            .then(results =>\r\n                this.setState({\r\n                                  user: results\r\n                              })\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    localStorage.getItem('token') === null &&\r\n                    <NavBarComponent/>\r\n                }\r\n                {\r\n                    localStorage.getItem('token') !== null &&\r\n                    <NavBarInSessionComponent/>\r\n                }\r\n                <div className=\"container\">\r\n                    <div className=\"profile-grid my-1\" style={{backgroundColor:\"rgb(23,162,184)\"}}>\r\n                        <div className=\"col-sm-4\">\r\n                            <ProfileImageComponent userId={this.props.userId}/>\r\n                        </div>\r\n                        <div className=\"col-sm-8\">\r\n                            <div className=\"row\">\r\n                                <h2 className=\"geek-name\"><b>{this.state.user.user.name}</b></h2>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <p className=\"geek-bio paragraph-justify\"><b>\r\n                                    {this.state.user.bio}\r\n                                </b></p>\r\n                            </div>\r\n\r\n                            {/*<div className=\"row\">*/}\r\n                            {/*    /!*<h4><b>Skills</b></h4>*!/*/}\r\n                            {/*</div>*/}\r\n                            {/*<div className=\"row\">*/}\r\n                            {/*    <ul className=\"skills\">*/}\r\n                            {/*        {this.state.user.skills.map(skill =>*/}\r\n                            {/*            <li><i*/}\r\n                            {/*                className=\"fas fa-terminal\"/> {skill}*/}\r\n                            {/*            </li>*/}\r\n                            {/*        )}*/}\r\n                            {/*    </ul>*/}\r\n                            {/*</div>*/}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-2 btn btn-success\" onClick={this.handleFollow}>Follow</div>\r\n                        <div className=\"col-sm-2 btn btn-danger\" onClick={this.handleUnFollow}>UnFollow</div>\r\n                        <div className=\"col-sm-2\">\r\n                            Followers: {this.state.user.followers.length}\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-2\">\r\n                            Following: {this.state.user.following.length}\r\n                        </div>\r\n\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <div className=\"profile-exp bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Experience</h2>\r\n                        {\r\n                            this.state.user.experience.map(exp =>\r\n\r\n                                <div>\r\n                                    <h3 className=\"text-dark\">{exp.company}</h3>\r\n                                    <p>{exp.from} to {exp.to}</p>\r\n                                    <p>\r\n                                        <strong>Position: </strong>{exp.title}\r\n                                    </p>\r\n                                    <p>\r\n                                        <strong>Description: </strong>{exp.description}\r\n                                    </p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.user.experience.length === 0 &&\r\n                            <h5>No Experience Record Found</h5>\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <div className=\"profile-edu bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Education</h2>\r\n                        {\r\n                            this.state.user.education.map(edu =>\r\n                                <div>\r\n                                    <h3 className=\"text-dark\">{edu.school}</h3>\r\n                                    <p>{edu.from} - {edu.to}</p>\r\n                                    <p>\r\n                                        <strong>Degree and Field Of Study: </strong>{edu.degree}\r\n                                    </p>\r\n                                    <p>\r\n                                        <strong>Description: </strong>{edu.description}\r\n                                    </p>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.user.education.length === 0 &&\r\n                                <h5>No Education Record Found</h5>\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <div className=\"profile-github\">\r\n                        <h2 className=\"text-dark my-1\">\r\n                            <i className=\"fab fa-github-square\"/> GitHub Repositories\r\n                        </h2>\r\n\r\n                        {\r\n                            this.state.repos.map(repo =>\r\n                                    <div>\r\n                                        {   repo.name !== 'undefined.github.io' &&\r\n\r\n                                            <Link\r\n                                                to={`/profiles/${this.state.user.user._id}/github/${repo.name}`}>\r\n                                                <div\r\n                                                    className=\"p-1 border border-secondary github-repo\">\r\n                                                    <div>\r\n                                                        <h4><a href=\"#\"\r\n                                                               className=\"text-dark\">{repo.name}</a>\r\n                                                        </h4>\r\n                                                        <p className=\"paragraph-justify\">\r\n                                                            {repo.description}\r\n                                                        </p>\r\n                                                        <i className=\"fas fa-star\"/> {repo.stargazers_count}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Link>\r\n                                        }\r\n\r\n                                            <br/>\r\n\r\n                                    </div>\r\n\r\n                            )\r\n                        }\r\n                        {\r\n                            this.state.repos.length === 1 &&\r\n                                this.state.repos[0].name === 'undefined.github.io' &&\r\n                            <div>\r\n                                <h5>GitHub account not found</h5>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nexport default class ProfileComponent extends React.Component {\r\n\r\n    state = {\r\n        user: {user: {}, social: {}, experience: [], education: [], skills: []},\r\n        repo: {license: '', forks: ''}\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await fetch(`${API_URL}/profile/user/${this.props.profileId}`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                user: results\r\n            }))\r\n        await fetch(`https://api.github.com/repos/${this.state.user.githubusername}/${this.props.repoName}`, {\r\n            headers: {\r\n                'Authorization': 'token 862dd87f07b9ebce2fc3bad7d3496d3e54a4646b'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                repo: results\r\n            }))\r\n        await console.log(\"Name\", this.state.user)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    localStorage.getItem('token') === null &&\r\n                    <NavBarComponent/>\r\n                }\r\n                {\r\n                    localStorage.getItem('token') !== null &&\r\n                    <NavBarInSessionComponent/>\r\n                }\r\n                {/*{this.state.user.user.name}*/}\r\n                {/*{this.props.repoName}*/}\r\n                {/*{this.state.repo.name}*/}\r\n                <div className=\"container\">\r\n\r\n                    <br/>\r\n                    <Link to={`/profiles/${this.props.profileId}`}>\r\n                        <span className=\"btn btn-light\">Back To {this.state.user.user.name}'s Profiles</span>\r\n                    </Link>\r\n                    <br/>\r\n\r\n                    <div className=\"profile-github\">\r\n\r\n                        <div className=\"p-1 border border-dark github-repo\">\r\n                            <div>\r\n                                <h4><a href=\"#\" className=\"text-dark\">{this.state.repo.name}</a></h4>\r\n                                <p className=\"paragraph-justify\">\r\n                                    {this.state.repo.description}\r\n                                </p>\r\n                                <i className=\"fas fa-circle\"/> {this.state.repo.language}\r\n                                <br/>\r\n                                <i className=\"fas fa-star\"/> {this.state.repo.stargazers_count}\r\n                                <br/>\r\n                                <i className=\"fas fa-code-branch\"/>\r\n                                {\r\n                                    this.state.repo.forks !== 0 ||\r\n                                    !this.state.repo.parent &&\r\n                                     <span>\r\n                                         <span> </span>\r\n                                         {this.state.repo.forks}\r\n                                     </span>\r\n\r\n\r\n                                }\r\n                                {this.state.repo.forks === 0 &&\r\n                                this.state.repo.parent &&\r\n                                <span>\r\n                                    <span> </span>\r\n                                    {this.state.repo.parent.forks}\r\n                                </span>\r\n\r\n                                }\r\n                                <br/>\r\n                                <b>Default\r\n                                    Branch</b>: {this.state.repo.default_branch}\r\n                                <br/>\r\n                                {\r\n                                    this.state.repo.license !== null &&\r\n                                    <div>\r\n                                        <i className=\"fas fa-balance-scale\"/>\r\n                                        <span> </span>{this.state.repo.license.name}\r\n                                    </div>\r\n\r\n                                }\r\n\r\n\r\n                                <b>Updated At:</b> {this.state.repo.updated_at}\r\n                                <br/>\r\n                                <a href={this.state.repo.html_url} target=\"_blank\">\r\n\r\n                                    <b>Repository Link</b>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\nimport ProfileImageComponent from \"./ProfileImageComponent\";\r\n\r\nconst axios = require('axios');\r\nconst test = require('../Post/temp')\r\nexport default class ProfilesContainer extends React.Component {\r\n\r\n    state = {\r\n        users: [],\r\n        repos: [],\r\n        nameToSearch: '',\r\n        userId: '',\r\n        image: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.findAllUser()\r\n        // this.getDisplayImage()\r\n    }\r\n\r\n\r\n    // getDisplayImage = () => {\r\n    //     fetch(`${API_URL}/profile/image`, {\r\n    //         headers: {\r\n    //             'x-auth-token': localStorage.getItem('token')\r\n    //         }\r\n    //     })\r\n    //         .then(response => response.json())\r\n    //         .then(results => this.setState({\r\n    //             image : results.image\r\n    //                                        }))\r\n    // }\r\n\r\n    changeName = (user) => {\r\n        this.setState({\r\n                          nameToSearch: user\r\n                      })\r\n    }\r\n\r\n    findUserByName = (name) => {\r\n        let array = [];\r\n        axios.post(`${API_URL}/users/name`, {\r\n            \"name\": name\r\n        })\r\n            .then(results => {\r\n                // this.setState({\r\n                //     users:res.data\r\n                // })\r\n                // console.log(results);\r\n                results.data.map(user => {\r\n                    // console.log\r\n                    let res = {\r\n                        user\r\n                    };\r\n                    array.push(res);\r\n                })\r\n                this.setState({\r\n                                  users: array\r\n                              })\r\n                console.log(this.state.users)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    findAllUser = () => {\r\n        fetch(`${API_URL}/profile/all`)\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                                               users: results\r\n                                           }))\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    localStorage.getItem('token') === null &&\r\n                    <NavBarComponent/>\r\n                }\r\n                {\r\n                    localStorage.getItem('token') !== null &&\r\n                    <NavBarInSessionComponent/>\r\n                }\r\n\r\n                <div className=\"container\">\r\n\r\n\r\n                    <div className=\"row find-user\">\r\n                        <button\r\n                            onClick={this.findAllUser}\r\n                            className=\"btn btn-warning find-all-users-button\">Find All Users\r\n                        </button>\r\n                        <input type=\"text\" placeholder=\"Search for user\"\r\n                               onChange={(e) => this.changeName(e.target.value)}\r\n                               className=\"form-control search-geeks\"\r\n                               width=\"100\"/>\r\n                        <button className=\"btn btn-info search-geek-button\"\r\n                                onClick={() => this.findUserByName(this.state.nameToSearch)}>Search\r\n                        </button>\r\n                    </div>\r\n                    <br/>\r\n\r\n                    <div className=\"row profiles\">\r\n                        <div className=\"col-sm-12\">\r\n                            {this.state.users.length>0 && this.state.users.map(user => (\r\n                                <div className=\"card profile-card\"\r\n                                     style={{float: \"left\", marginLeft: \"1.2em\"}}\r\n                                     key={user.user._id}>\r\n                                    <ProfileImageComponent userId={user.user._id}/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{user.user.name}</h5>\r\n                                        <Link to={`/profiles/${user.user._id}`}>\r\n                                            <button href=\"#\" className=\"btn btn-primary\">\r\n                                                See Profile\r\n                                            </button>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/*<div className=\"col-sm-1 dp\">*/}\r\n\r\n                    {/*    /!*<img src=\"../images/sajag_dp.jfif\" alt=\"\" width=\"250\" height=\"250\"/>*!/*/}\r\n                    {/*    <img src={this.state.image} alt=\"\" width=\"250\" height=\"250\"/>*/}\r\n                    {/*</div>*/}\r\n\r\n                    {/*{*/}\r\n                    {/*    this.state.users&&this.state.users.map(user =>*/}\r\n                    {/*        <div className=\"container\">*/}\r\n                    {/*        <div key={user.user._id} className=\"col-sm-6\">*/}\r\n                    {/*            <div className=\"row\">*/}\r\n                    {/*                <h2 className=\"geek-name\"><b>{user.user.name}</b></h2>*/}\r\n                    {/*            </div>*/}\r\n                    {/*            <div className=\"row\">*/}\r\n                    {/*                <p className=\"geek-bio\">*/}\r\n                    {/*                    {user.bio}*/}\r\n                    {/*                </p>*/}\r\n                    {/*            </div>*/}\r\n                    {/*            <div className=\"row\">*/}\r\n                    {/*                <p className=\"geek-bio\">*/}\r\n                    {/*                    Quincy, MA*/}\r\n                    {/*                </p>*/}\r\n                    {/*            </div>*/}\r\n                    {/*            <div className=\"row\">*/}\r\n                    {/*                <Link to={`/profiles/${user.user._id}`}>*/}\r\n                    {/*                    <span href=\"#\" className=\"btn btn-danger\">Open Profile</span>*/}\r\n                    {/*                </Link>*/}\r\n                    {/*            </div>*/}\r\n                    {/*        </div>*/}\r\n                    {/*        </div>*/}\r\n                    {/*    )*/}\r\n                    {/*}*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport NavBarComponent from \"./NavBar/NavBarComponent\";\r\nimport  bkg_image from '../images/landing-page-image.jpg'\r\nimport bkg_image_1 from '../images/person-holding-midnight-black-samsung-galaxy-s8-turn-on-near-1092671.jpg'\r\n\r\nexport default class LandingComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarComponent/>\r\n                <div className={\"landingContainer\"}>\r\n                <img src={bkg_image_1} className=\"img-fluid\" alt=\"Logo\"/>\r\n                {/*<div className=\"center landing-main-div\">*/}\r\n                    {/*<h2 className=\"text-dark\">*/}\r\n                    {/*    <b style={{color:'white'}}>Welcome to GeeksHub</b>*/}\r\n                    {/*</h2>*/}\r\n\r\n                    {/*<h2 className=\"text-dark\">*/}\r\n                    {/*    <b><i>A Social Media for Developers</i></b>*/}\r\n                    {/*</h2>*/}\r\n\r\n                    {/*<button className=\"login-button btn-secondary btn-lg\">Login</button>*/}\r\n                    {/*<button className=\"register-button btn-secondary btn-lg\">Register</button>*/}\r\n\r\n                {/*</div>*/}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass SignUpComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        password: '',\r\n        email: '',\r\n        name: '',\r\n        cpassword: '',\r\n        token: ''\r\n    }\r\n\r\n    register = async () => {\r\n        if (this.state.password !== this.state.cpassword) {\r\n            alert(\"Passwords do not match\")\r\n        } else {\r\n            // alert(\"Awesome\")\r\n            await fetch(`${API_URL}/users`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(\r\n                    {\r\n                        password: this.state.password,\r\n                        email: this.state.email,\r\n                        name: this.state.name\r\n                    }\r\n                )\r\n            }).then(response =>\r\n                response.json()\r\n            ).then(\r\n                r => {\r\n                    if (r.errors !== undefined) {\r\n                        r.errors.map(error =>\r\n                            console.log(\"ERROR\", error.msg)\r\n                        )\r\n                    } else {\r\n                        console.log(\"SUCCESS\", r)\r\n                        this.setState(\r\n                            {\r\n                                token: r.token\r\n                            }\r\n                        )\r\n                        fetch(\r\n                            `${API_URL}/profile`, {\r\n                                headers: {\r\n                                    'x-auth-token': this.state.token,\r\n                                    'content-type': 'application/json'\r\n                                },\r\n                                method: 'POST'\r\n                            }).then(\r\n                            async () =>  {\r\n                                await console.log('State token ', this.state.token)\r\n                                await this.props.generateTokenAndSave(this.state.token)\r\n                                await this.props.history.push(`/dashboard`)\r\n                            }\r\n                    )\r\n\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <NavBarComponent/>\r\n                <div className=\"container login-main-div-1\">\r\n\r\n\r\n                    <p className=\"lead\"><i className=\"fas fa-user-plus\"/> SIGN UP</p>\r\n                    <form className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            {/*<input*/}\r\n                            {/*    type=\"text\"*/}\r\n                            {/*    placeholder=\"Full Name\"*/}\r\n                            {/*    name=\"name\"*/}\r\n                            {/*    required*/}\r\n                            {/*/>*/}\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    name: e.target.value\r\n                                })\r\n                            }\r\n                                   placeholder=\"Full Name\"\r\n                                   name={\"email\"}\r\n                                   required\r\n                                   value={this.state.name}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    email: e.target.value\r\n                                })\r\n                            }\r\n                                   type={\"email\"}\r\n                                   placeholder=\"Email\"\r\n                                   name={\"email\"}\r\n                                   required={\"true\"}\r\n                                   value={this.state.email}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    password: e.target.value\r\n                                })\r\n                            }\r\n                                   type={\"password\"}\r\n                                   placeholder=\"Password\"\r\n                                   name={\"password\"}\r\n                                   required={\"true\"}\r\n                                   value={this.state.password}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    cpassword: e.target.value\r\n                                })\r\n                            }\r\n                                   type={\"password\"}\r\n                                   placeholder=\"Confirm Password\"\r\n                                   name={\"confirmPassword\"}\r\n                                   required={\"true\"}\r\n                                   value={this.state.cpassword}\r\n                            />\r\n\r\n                        </div>\r\n                    </form>\r\n                    <button\r\n                        onClick={this.register}\r\n                        type=\"submit\" className=\"btn btn-primary\">\r\n                        Sign Up\r\n                    </button>\r\n\r\n                    <p className=\"my-1\">\r\n                        Already have an account?\r\n                        <Link to={\"/sign-in\"}> Sign In</Link>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    return {\r\n        // token: state.token\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n    return {\r\n        generateTokenAndSave: (token) =>\r\n            dispatch({\r\n                type: \"ADD_TOKEN\",\r\n                token: token\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    stateToPropertyMapper, dispatchToPropertyMapper)(SignUpComponent)\r\n","import React from \"react\";\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SignInComponent extends React.Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        alert: false,\r\n        alert_msg: ''\r\n    }\r\n\r\n    login = async () => {\r\n        await fetch(`${API_URL}/users/auth`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    password: this.state.password,\r\n                    email: this.state.email\r\n                }\r\n            )\r\n        }).then(response =>\r\n            response.json()\r\n        ).then(\r\n            r => {\r\n                if (r.errors !== undefined) {\r\n                    r.errors.map(error => {\r\n                            this.setState({\r\n                                alert: true,\r\n                                alert_msg: error.msg\r\n                            })\r\n                            setTimeout(function () {\r\n                                this.setState({alert: false, alert_msg: ''});\r\n                            }.bind(this), 3000);\r\n                        }\r\n                    )\r\n                } else {\r\n                    console.log(\"SUCCESS\", r.user.role)\r\n                    this.props.generateTokenAndSave(r.token)\r\n                    {\r\n                        r.user === undefined &&\r\n                        this.props.history.push(`/dashboard`)\r\n                    }\r\n                    {\r\n                        r.user.role === 0 &&\r\n                        this.props.history.push(`/dashboard`)\r\n                    }\r\n                    {\r\n                        r.user.role === 1 &&\r\n                        this.props.history.push(`/admin-users`)\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <NavBarComponent/>\r\n\r\n                <div className=\"container login-main-div\">\r\n                    {this.state.alert &&\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {this.state.alert_msg}\r\n                    </div>\r\n                    }\r\n\r\n                    <p className=\"lead\"><i className=\"fas fa-sign-in-alt\"/> SIGN IN</p>\r\n                    <form className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    email: e.target.value\r\n                                })\r\n                            }\r\n                                   placeholder=\"Email Address\"\r\n                                   name={\"email\"}\r\n                                   required\r\n                                   type={\"email\"}\r\n                                   value={this.state.email}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n\r\n                            <input onChange={async (e) =>\r\n                                await this.setState({\r\n                                    password: e.target.value\r\n                                })\r\n                            }\r\n                                   placeholder=\"Password\"\r\n                                   name={\"password\"}\r\n                                   type={\"password\"}\r\n                                   required\r\n                                   value={this.state.password}\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                    <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">\r\n                        Sign In\r\n                    </button>\r\n\r\n                    <p className=\"my-1\">\r\n                        Don't have an account?\r\n                        <Link to={\"/sign-up\"}> Sign Up</Link>\r\n                    </p>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    return {\r\n        // token: state.token\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n    return {\r\n        generateTokenAndSave: (token) =>\r\n            dispatch({\r\n                type: \"ADD_TOKEN\",\r\n                token: token\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    stateToPropertyMapper, dispatchToPropertyMapper)(SignInComponent)\r\n\r\n","import React from \"react\";\r\nexport default class FailureComponent extends React.Component{\r\n    render() {\r\n        return (\r\n            <h1>Failure</h1>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport NavBarComponent from \"../Component/NavBar/NavBarComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nexport default class SuccessComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarComponent/>\r\n            <h1>Success</h1>\r\n            <Link to={\"/dashboard\"}>\r\n                Dashboard\r\n            </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker/es\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass ExperienceTableComponent extends React.Component {\r\n\r\n    state = {\r\n        experiences: [],\r\n        inputCompany: '',\r\n        inputTitle: '',\r\n        inputFrom: '',\r\n        inputTo: '',\r\n        inputDescription: '',\r\n        current: false,\r\n\r\n        updateCompany: '',\r\n        updateTitle: '',\r\n        updateFrom: '',\r\n        updateTo: '',\r\n        updateDescription: '',\r\n        updateCurrent: false,\r\n\r\n\r\n        edit: false,\r\n\r\n\r\n    }\r\n\r\n    addExperience = () => {\r\n        fetch(`${API_URL}/profile/experience`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    company: this.state.inputCompany,\r\n                    title: this.state.inputTitle,\r\n                    from: this.state.inputFrom,\r\n                    to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    current: this.state.current,\r\n                    description: this.state.inputDescription\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.getExperience()\r\n            })\r\n    }\r\n\r\n    updateExperience = (experienceId) => {\r\n        fetch(`${API_URL}/profile/experience/${experienceId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    company: this.state.updateCompany,\r\n                    title: this.state.updateTitle,\r\n                    from: this.state.updateFrom,\r\n                    // to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    to: this.state.updateTo,\r\n                    current: this.state.updateCurrent,\r\n                    description: this.state.updateDescription\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.getExperience()\r\n            })\r\n    }\r\n\r\n    deleteExperience = (eid) => {\r\n        fetch(`${API_URL}/profile/experience/${eid}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                this.getExperience()\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        this.getExperience();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.experienceId !== this.props.experienceId)\r\n            this.getExperience()\r\n    }\r\n\r\n    getExperience = () => {\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token')\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                experiences: results.experience,\r\n                inputCompany: '',\r\n                inputTitle: '',\r\n                inputFrom: '',\r\n                inputDescription: '',\r\n                inputTo: ''\r\n            }))\r\n    }\r\n\r\n    changeEdit = () => {\r\n        if (this.state.edit === false)\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        else\r\n            this.setState({\r\n                edit: false\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col list-group\">\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        {/*<ul className=\"row experience-ul\">*/}\r\n                        <div className=\"col-lg-2\">Company</div>\r\n                        <div className=\"hide-sm col-lg-2\">Title</div>\r\n                        <div className=\"hide-sm col-lg-2\">Description</div>\r\n                        <div className=\"hide-sm col-lg-2\">From</div>\r\n                        <div className=\"hide-sm col-lg-2\">To</div>\r\n                        {/*</ul>*/}\r\n                    </div>\r\n                </div>\r\n                {/*<tbody>*/}\r\n                {\r\n                    this.state.experiences&&this.state.experiences.map(experience =>\r\n                        <Link to={`/dashboard/experience/${experience._id}`}>\r\n\r\n\r\n                            {\r\n                                this.state.edit === true && this.props.experienceId === experience._id &&\r\n\r\n                                <div className=\"list-group-item active\">\r\n                                    <div className=\"container row\" key={experience._id}>\r\n                                        <div className=\"col-lg-2\">\r\n\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Company Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateCompany: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateCompany}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Title Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTitle: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateTitle}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <textarea\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Description Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateDescription: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateDescription}\r\n                                            />\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input From Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateFrom: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateFrom}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {this.state.updateTo !== 'Present' &&\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input To Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTo: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateTo}\r\n                                            />\r\n                                            }\r\n                                            {this.state.updateTo === 'Present' &&\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input To Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTo: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                readOnly={\"true\"}\r\n                                                disabled={\"true\"}\r\n                                                value={this.state.updateTo}\r\n                                            />\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n                                            <button\r\n                                                className=\"btn btn-danger\"\r\n                                                onClick={async () => {\r\n                                                    await this.changeEdit()\r\n                                                    await this.updateExperience(experience._id)\r\n\r\n                                                }}\r\n                                            >\r\n\r\n                                                Save\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            }\r\n\r\n                            {\r\n\r\n                                this.state.edit === false && this.props.experienceId === experience._id &&\r\n\r\n\r\n                                <div>\r\n                                    <div className=\"list-group-item active\">\r\n                                        <div className=\"container row\" key={experience._id}>\r\n                                            <div className=\"col-lg-2\">\r\n\r\n                                                {experience.company}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {experience.title}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {experience.description}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {experience.from}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {experience.to}\r\n\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n                                                <button\r\n                                                    className=\"btn btn-danger edit-button\"\r\n                                                    onClick={async () => {\r\n                                                        await this.setState({\r\n                                                            updateCompany: experience.company,\r\n                                                            updateTitle: experience.title,\r\n                                                            updateDescription: experience.description,\r\n                                                            updateTo: experience.to,\r\n                                                            updateFrom: experience.from,\r\n                                                            updateCurrent: experience.current\r\n                                                        })\r\n                                                        await this.changeEdit()\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n\r\n                                                    <i className=\"far fa-edit\"\r\n                                                    > </i>\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"btn btn-danger\"\r\n                                                    onClick={() => this.deleteExperience(experience._id)}\r\n                                                >\r\n\r\n                                                    <i className=\"far fa-trash-alt\"> </i>\r\n\r\n                                                </button>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                            {\r\n                                this.props.experienceId !== experience._id &&\r\n\r\n                                <div className=\"list-group-item\"\r\n                                     onClick={() => {\r\n                                         this.setState({\r\n                                             edit: false\r\n                                         })\r\n                                     }}\r\n                                >\r\n                                    <div className=\"container row\" key={experience._id}>\r\n                                        <div className=\"col-lg-2\">\r\n\r\n                                            {experience.company}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {experience.title}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {experience.description}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {experience.from}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {experience.to}\r\n\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </Link>\r\n                    )\r\n                }\r\n\r\n                <br/>\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Company Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputCompany: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputCompany}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Title Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputTitle: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputTitle}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <textarea\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Description Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputDescription: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputDescription}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"From...\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputFrom: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputFrom}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            {this.state.current &&\r\n                            <input\r\n                                value={\"Present\"}\r\n                                readOnly={\"true\"}\r\n                                disabled={\"true\"}\r\n                            />\r\n                            }\r\n                            {!this.state.current &&\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"To\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputTo: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputTo}\r\n                            />\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-lg-1\">\r\n\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                        current: !this.state.current\r\n                                    })\r\n                                }\r\n\r\n                                id=\"vehicle1\" name=\"vehicle1\"\r\n                                value={this.state.current}/>\r\n\r\n                            <label htmlFor=\"vehicle1\"> Ongoing</label>\r\n                        </div>\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    this.addExperience()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                <i className=\"fas fa-plus-circle fa-lg\"> </i>\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExperienceTableComponent\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker/es\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass educationTableComponent extends React.Component {\r\n\r\n    state = {\r\n        educations: [],\r\n        inputSchool: '',\r\n        inputDegree: '',\r\n        inputFrom: '',\r\n        inputTo: '',\r\n        inputDescription: '',\r\n        current: false,\r\n\r\n        updateSchool: '',\r\n        updateDegree: '',\r\n        updateFrom: '',\r\n        updateTo: '',\r\n        updateDescription: '',\r\n        updateCurrent: false,\r\n\r\n\r\n        edit: false,\r\n\r\n\r\n    }\r\n\r\n    addeducation = () => {\r\n        fetch(`${API_URL}/profile/education`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    school: this.state.inputSchool,\r\n                    degree: this.state.inputDegree,\r\n                    from: this.state.inputFrom,\r\n                    to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    current: this.state.current,\r\n                    description: this.state.inputDescription,\r\n                    fieldofstudy: 'null'\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.geteducation()\r\n            })\r\n    }\r\n\r\n    updateeducation = (educationId) => {\r\n        fetch(`${API_URL}/profile/education/${educationId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    school: this.state.updateSchool,\r\n                    degree: this.state.updateDegree,\r\n                    from: this.state.updateFrom,\r\n                    // to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    to: this.state.updateTo,\r\n                    current: this.state.updateCurrent,\r\n                    description: this.state.updateDescription,\r\n                    fieldofstudy: 'null'\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.geteducation()\r\n            })\r\n    }\r\n\r\n    deleteeducation = (eid) => {\r\n        fetch(`${API_URL}/profile/education/${eid}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(response => {\r\n                this.geteducation()\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        this.geteducation();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.educationId !== this.props.educationId)\r\n            this.geteducation()\r\n    }\r\n\r\n    geteducation = () => {\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token')\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                educations: results.education,\r\n                inputSchool: '',\r\n                inputDegree: '',\r\n                inputFrom: '',\r\n                inputDescription: '',\r\n                inputTo: ''\r\n            }))\r\n    }\r\n\r\n    changeEdit = () => {\r\n        if (this.state.edit === false)\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        else\r\n            this.setState({\r\n                edit: false\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col list-group\">\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        {/*<ul className=\"row education-ul\">*/}\r\n                        <div className=\"col-lg-2\">School</div>\r\n                        <div className=\"hide-sm col-lg-2\">Degree and Field of Study</div>\r\n                        <div className=\"hide-sm col-lg-2\">Description</div>\r\n                        <div className=\"hide-sm col-lg-2\">From</div>\r\n                        <div className=\"hide-sm col-lg-2\">To</div>\r\n                        {/*</ul>*/}\r\n                    </div>\r\n                </div>\r\n                {/*<tbody>*/}\r\n                {\r\n                    this.state.educations&&this.state.educations.map(education =>\r\n                        <Link to={`/dashboard/education/${education._id}`}>\r\n\r\n\r\n                            {\r\n                                console.log(\"Old Eid\", this.props.educationId + \" AA \", education._id)\r\n                            }\r\n\r\n                            {\r\n                                this.state.edit === true && this.props.educationId === education._id &&\r\n\r\n                                <div className=\"list-group-item active\">\r\n                                    <div className=\"container row\" key={education._id}>\r\n                                        <div className=\"col-lg-2\">\r\n\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input School Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateSchool: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateSchool}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Degree Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateDegree: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateDegree}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <textarea\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input Description Here\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateDescription: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateDescription}\r\n                                            />\r\n\r\n                                        </div>\r\n\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input From Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateFrom: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateFrom}\r\n                                            />\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {this.state.updateTo !== 'Present' &&\r\n                                            <input\r\n                                                type=\"date\"\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input To Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTo: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                value={this.state.updateTo}\r\n                                            />\r\n                                            }\r\n                                            {this.state.updateTo === 'Present' &&\r\n                                            <input\r\n                                                className=\"nav-item ml-auto form-control\"\r\n                                                placeholder=\"Input To Date\"\r\n                                                onChange={async (e) => {\r\n                                                    const n = e.target.value;\r\n                                                    await this.setState({\r\n                                                            ...this.state,\r\n                                                            updateTo: n\r\n                                                        }\r\n                                                    )\r\n                                                }}\r\n                                                readOnly={\"true\"}\r\n                                                disabled={\"true\"}\r\n                                                value={this.state.updateTo}\r\n                                            />\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n                                            <button\r\n                                                className=\"btn btn-danger\"\r\n                                                onClick={async () => {\r\n                                                    await this.changeEdit()\r\n                                                    await this.updateeducation(education._id)\r\n\r\n                                                }}\r\n                                            >\r\n\r\n                                                Save\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            }\r\n\r\n                            {\r\n\r\n                                this.state.edit === false && this.props.educationId === education._id &&\r\n\r\n\r\n                                <div>\r\n                                    <div className=\"list-group-item active\">\r\n                                        <div className=\"container row\" key={education._id}>\r\n                                            <div className=\"col-lg-2\">\r\n\r\n                                                {education.school}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {education.degree}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {education.description}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {education.from}\r\n\r\n                                            </div>\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n\r\n                                                {education.to}\r\n\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"hide-sm col-lg-2\">\r\n                                                <button\r\n                                                    className=\"btn btn-danger edit-button\"\r\n                                                    onClick={async () => {\r\n                                                        await this.setState({\r\n                                                            updateSchool: education.school,\r\n                                                            updateDegree: education.degree,\r\n                                                            updateDescription: education.description,\r\n                                                            updateTo: education.to,\r\n                                                            updateFrom: education.from,\r\n                                                            updateCurrent: education.current\r\n                                                        })\r\n                                                        await this.changeEdit()\r\n                                                    }\r\n                                                    }\r\n                                                >\r\n\r\n                                                    <i className=\"far fa-edit\"\r\n                                                    > </i>\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"btn btn-danger\"\r\n                                                    onClick={() => this.deleteeducation(education._id)}\r\n                                                >\r\n\r\n                                                    <i className=\"far fa-trash-alt\"> </i>\r\n\r\n                                                </button>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                            {\r\n                                this.props.educationId !== education._id &&\r\n\r\n                                <div className=\"list-group-item\"\r\n                                     onClick={() => {\r\n                                         this.setState({\r\n                                             edit: false\r\n                                         })\r\n                                     }}\r\n                                >\r\n                                    <div className=\"container row\" key={education._id}>\r\n                                        <div className=\"col-lg-2\">\r\n\r\n                                            {education.school}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {education.degree}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {education.description}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {education.from}\r\n\r\n                                        </div>\r\n                                        <div className=\"hide-sm col-lg-2\">\r\n\r\n                                            {education.to}\r\n\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </Link>\r\n                    )\r\n                }\r\n\r\n                <br/>\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input School Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputSchool: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputSchool}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Degree Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputDegree: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputDegree}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <textarea\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input Description Here\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputDescription: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputDescription}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"From...\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputFrom: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputFrom}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-2\">\r\n                            {this.state.current &&\r\n                            <input\r\n                                value={\"Present\"}\r\n                                readOnly={\"true\"}\r\n                                disabled={\"true\"}\r\n                            />\r\n                            }\r\n                            {!this.state.current &&\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"To\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            inputTo: e.target.value\r\n                                        }\r\n                                    )}\r\n                                value={this.state.inputTo}\r\n                            />\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-lg-1\">\r\n\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                        current: !this.state.current\r\n                                    })\r\n                                }\r\n\r\n                                id=\"vehicle1\" name=\"vehicle1\"\r\n                                value={this.state.current}/>\r\n\r\n                            <label htmlFor=\"vehicle1\"> Ongoing</label>\r\n                        </div>\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    this.addeducation()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                <i className=\"fas fa-plus-circle fa-lg\"> </i>\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default educationTableComponent\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker/es\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass gitHubDashboard extends React.Component {\r\n\r\n    state = {\r\n        githubUsername: null,\r\n        dashboardToken: '',\r\n        edit: false,\r\n    }\r\n\r\n    addGithubUsername = () => {\r\n        // console.log(\"Trying to add githubusername\")\r\n        // console.log(localStorage.getItem('token'))\r\n        // console.log(this.state.githubUsername)\r\n        fetch(`${API_URL}/profile/githubusername`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    githubusername: this.state.githubUsername\r\n                }\r\n            )\r\n        }).then(() => this.getGithubUsername())\r\n    }\r\n\r\n    updateGithubUsername = (educationId) => {\r\n        fetch(`${API_URL}/profile/githubusername`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    school: this.state.updateSchool,\r\n                    degree: this.state.updateDegree,\r\n                    from: this.state.updateFrom,\r\n                    // to: !this.state.current ? this.state.inputTo : 'Present',\r\n                    to: this.state.updateTo,\r\n                    current: this.state.updateCurrent,\r\n                    description: this.state.updateDescription,\r\n                    fieldofstudy: 'null'\r\n                }\r\n            )\r\n        })\r\n            .then(response => {\r\n                this.getGithubUsername()\r\n            })\r\n    }\r\n\r\n    deleteGithubUsername = (eid) => {\r\n        fetch(`${API_URL}/profile/githubusername`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': this.state.dashboardToken,\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then(() => {\r\n                this.getGithubUsername()\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        await this.setState({\r\n            dashboardToken: localStorage.getItem('token')\r\n        })\r\n        await this.getGithubUsername();\r\n    }\r\n\r\n\r\n    getGithubUsername = () => {\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': this.state.dashboardToken\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                githubUsername: results.githubusername !== \"\" ? results.githubusername: null\r\n\r\n            }))\r\n    }\r\n\r\n    changeEdit = () => {\r\n        if (this.state.edit === false)\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        else\r\n            this.setState({\r\n                edit: false\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <div>\r\n            //     {this.state.githubUsername}\r\n            // </div>\r\n\r\n\r\n            <div>\r\n                {this.state.edit === false &&\r\n                <div className=\"col list-group\">\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"container row\">\r\n                            {!this.state.githubUsername &&\r\n                            <div className=\"col-lg-2\"><i>No Username Given</i></div>\r\n                            }\r\n                            {this.state.githubUsername &&\r\n                            <div className=\"col-lg-2\"><i>{this.state.githubUsername}</i></div>\r\n                            }\r\n\r\n                            <div className=\"col-lg-2\">\r\n                                {!this.state.githubUsername &&\r\n                                <button\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            edit: true\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    className=\"btn btn-danger\">\r\n                                    Add Username\r\n                                </button>\r\n                                }\r\n                                {this.state.githubUsername &&\r\n                                <button\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            edit: true\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    className=\"btn btn-danger\">\r\n                                    Edit Username\r\n                                </button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n                {this.state.edit === true &&\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        <div className=\"col-lg-2\">\r\n                            <input\r\n\r\n                                className=\"nav-item ml-auto form-control\"\r\n                                placeholder=\"Input GitHub Username\"\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            githubUsername: e.target.value,\r\n                                        }\r\n                                    )}\r\n                                value={this.state.githubUsername}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={async () => {\r\n                                    await this.setState({\r\n                                        edit: false\r\n                                    })\r\n                                    await this.addGithubUsername()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                Enter\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={async () => {\r\n                                    await this.setState({\r\n                                        edit: false\r\n                                    })\r\n                                    await this.deleteGithubUsername()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                Delete\r\n\r\n                            </button>\r\n                        </div>\r\n                        {/*<div className=\"col-lg-1\">*/}\r\n                        {/*    <button*/}\r\n                        {/*        onClick={async () => {*/}\r\n                        {/*            await this.setState({*/}\r\n                        {/*                edit: false*/}\r\n                        {/*            })*/}\r\n                        {/*            await this.deleteGithubUsername()*/}\r\n                        {/*        }*/}\r\n                        {/*        }*/}\r\n                        {/*        className=\"btn btn-danger\"*/}\r\n                        {/*    >*/}\r\n                        {/*        Delete*/}\r\n                        {/*    </button>*/}\r\n\r\n\r\n                        {/*</div>*/}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default gitHubDashboard\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker/es\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport MaskedInput from \"react-text-mask/dist/reactTextMask\";\r\n\r\n\r\nclass phoneNumberComponent extends React.Component {\r\n\r\n    state = {\r\n        phoneNumber: '',\r\n        dashboardToken: '',\r\n        edit: false,\r\n        p: ''\r\n    }\r\n\r\n    addPhoneNumber = () => {\r\n        if(this.state.phoneNumber === null) {\r\n            alert(\"Enter correct format phone number\");\r\n            this.setState({\r\n                phoneNumber: null\r\n            })\r\n\r\n        }\r\n        else if(this.unFormatPhoneNumber(this.state.phoneNumber).length < 10) {\r\n            alert(\"Enter correct format phone number\");\r\n            this.setState({\r\n                phoneNumber: null\r\n            })\r\n\r\n        }\r\n        else {\r\n            fetch(`${API_URL}/profile/phone`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token'),\r\n                    'content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(\r\n                    {\r\n                        phone: this.unFormatPhoneNumber(this.state.phoneNumber)\r\n                    }\r\n                )\r\n            }).then(() => this.getPhoneNumber())\r\n        }\r\n    }\r\n\r\n    formatPhoneNumber = (phoneNumberString) => {\r\n        console.log(\"AA\",phoneNumberString)\r\n        let cleaned = ('' + phoneNumberString).replace(/\\D/g, '')\r\n        let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\r\n        if (match) {\r\n            return '(' + match[1] + ') ' + match[2] + '-' + match[3]\r\n        }\r\n        return null\r\n    }\r\n\r\n\r\n    unFormatPhoneNumber = (phoneNumberString) => {\r\n        var p = '';\r\n        if(phoneNumberString.length===10){\r\n            p=phoneNumberString;\r\n        }\r\n        else {\r\n            var j = 0;\r\n            for (j = 0; j < phoneNumberString.length; j++) {\r\n                var char = phoneNumberString.charAt(j);\r\n                if(char>='0' && char<='9'){\r\n                    p+=phoneNumberString.charAt(j);\r\n                }\r\n            }\r\n        }\r\n         console.log(\"BB\",p);\r\n        return p;\r\n    }\r\n\r\n    deletePhoneNumber = () => {\r\n        fetch(`${API_URL}/profile/phone`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': this.state.dashboardToken,\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n            .then( () => {\r\n                 this.getPhoneNumber()\r\n            })\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        // this.unFormatPhoneNumber('(666) 555-4454')\r\n        await this.setState({\r\n            dashboardToken: localStorage.getItem('token')\r\n        })\r\n        await this.getPhoneNumber();\r\n    }\r\n\r\n\r\n    getPhoneNumber = () => {\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': this.state.dashboardToken\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                phoneNumber: results.phone !== \"\" ? results.phone: null\r\n            }))\r\n            .then(() => this.setState({\r\n                p: this.formatPhoneNumber(this.state.phoneNumber)\r\n            }))\r\n    }\r\n\r\n    changeEdit = () => {\r\n        if (this.state.edit === false)\r\n            this.setState({\r\n                edit: true\r\n            })\r\n        else\r\n            this.setState({\r\n                edit: false\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            // <div>\r\n            //     {this.state.phoneNumber}\r\n            // </div>\r\n\r\n\r\n            <div>\r\n                {this.state.edit === false &&\r\n                <div className=\"col list-group\">\r\n                    <div className=\"list-group-item\">\r\n                        <div className=\"container row\">\r\n                            {!this.state.phoneNumber &&\r\n                            <div className=\"col-lg-2\"><i>No Phone Number Given</i></div>\r\n                            }\r\n                            {this.state.phoneNumber &&\r\n\r\n                            <div className=\"col-lg-2\">\r\n\r\n                                <i>{this.state.p}</i>\r\n                            </div>\r\n                            }\r\n\r\n                            <div className=\"col-lg-2\">\r\n                                {!this.state.phoneNumber &&\r\n                                <button\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            edit: true\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    className=\"btn btn-danger\">\r\n                                    Add Phone Number\r\n                                </button>\r\n                                }\r\n                                {this.state.phoneNumber &&\r\n                                <button\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            edit: true\r\n                                        })\r\n                                    }\r\n                                    }\r\n                                    className=\"btn btn-danger\">\r\n                                    Edit Phone Number\r\n                                </button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n                {this.state.edit === true &&\r\n                <div className=\"list-group-item\">\r\n                    <div className=\"container row\">\r\n                        <div className=\"col-lg-2\">\r\n                            <MaskedInput\r\n                                mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n                                guide\r\n                                showMasked\r\n\r\n                                className=\"nav-item ml-auto form-control\"\r\n\r\n                                onChange={async (e) =>\r\n                                    await this.setState({\r\n                                            phoneNumber: e.target.value,\r\n                                        }\r\n                                    )}\r\n                                value={this.state.phoneNumber}\r\n                            />\r\n\r\n                            {/*<MaskedInput*/}\r\n                            {/*    mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}*/}\r\n                            {/*    guide*/}\r\n                            {/*    */}\r\n                            {/*    value={this.state.phoneNumber}*/}\r\n                            {/*/>*/}\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={async () => {\r\n                                    await this.setState({\r\n                                        edit: false\r\n                                    })\r\n                                    await this.addPhoneNumber()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                Save\r\n\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-1\">\r\n                            <button\r\n                                onClick={async () => {\r\n                                    await this.setState({\r\n                                        edit: false\r\n                                    })\r\n                                    await this.deletePhoneNumber()\r\n                                }\r\n                                }\r\n                                className=\"btn btn-danger\">\r\n                                Delete\r\n\r\n                            </button>\r\n                        </div>\r\n                        {/*<div className=\"col-lg-1\">*/}\r\n                        {/*    <button*/}\r\n                        {/*        onClick={async () => {*/}\r\n                        {/*            await this.setState({*/}\r\n                        {/*                edit: false*/}\r\n                        {/*            })*/}\r\n                        {/*            await this.deletephoneNumber()*/}\r\n                        {/*        }*/}\r\n                        {/*        }*/}\r\n                        {/*        className=\"btn btn-danger\"*/}\r\n                        {/*    >*/}\r\n                        {/*        Delete*/}\r\n                        {/*    </button>*/}\r\n\r\n\r\n                        {/*</div>*/}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default phoneNumberComponent","import firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\n\r\nvar config={\r\n    apiKey: \"AIzaSyBeMKAtl4ZQucjfs6CpGrALxLfzbR-x_wI\",\r\n    authDomain: \"ecommerceweb-8831e.firebaseapp.com\",\r\n    databaseURL: \"https://ecommerceweb-8831e.firebaseio.com\",\r\n    projectId: \"ecommerceweb-8831e\",\r\n    storageBucket: \"ecommerceweb-8831e.appspot.com\",\r\n    messagingSenderId: \"314743947882\",\r\n    appId: \"1:314743947882:web:46d3c02d6dce8c65\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nconst storage=firebase.storage();\r\n\r\nexport {\r\n    storage, firebase as default\r\n}\r\n","import React from \"react\";\r\n\r\nconst ImageComponent = ({imageUrl}) => {\r\n    return (\r\n        <img style={{height : 130, width : 100}}\r\n             src={imageUrl}\r\n             alt=\"new\"\r\n        />\r\n    )\r\n}\r\nexport default ImageComponent\r\n","import React from \"react\";\r\nimport ExperienceTableComponent from \"./ExperienceTableComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport {connect} from \"react-redux\";\r\nimport EducationTableComponent from \"./EducationTableComponent\";\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\nimport GitHubDashboard from \"./GitHubDashboard\";\r\nimport PhoneNumberComponent from \"./PhoneNumberComponent\";\r\nimport axios from 'axios';\r\nimport FileUploader from 'react-firebase-file-uploader';\r\nimport {storage} from '../firebase_config';\r\nimport firebase from 'firebase/app';\r\nimport ImageComponent from \"./ImageComponent\";\r\nclass DashboardContainer extends React.Component {\r\n    state = {\r\n        user: {name: ''},\r\n        experiences: [],\r\n        dashboardToken: '',\r\n        image: '',\r\n    }\r\n    handleUploadSuccess = (filename) => {\r\n        storage.ref('Uploaded_Images').child(filename).getDownloadURL().then(url => {\r\n            let newA = url;\r\n            console.log(newA);\r\n            this.setState({\r\n                              image: newA\r\n                          })\r\n            console.log(this.state.image);\r\n        })\r\n    }\r\n\r\n    saveImage = () => {\r\n        fetch(`http://localhost:3002/codebook/profile/image`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    image: this.state.image\r\n                }\r\n            )\r\n        }).then(() => console.log(\"after fetch: \", this.state.image ))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.dashboardToken = localStorage.getItem('token')\r\n        console.log(\"Dashboard token: \", this.state.dashboardToken)\r\n        {\r\n            this.state.dashboardToken === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n        fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': '' + this.state.dashboardToken\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                                               user: results.user,\r\n                                               experiences: results.experience,\r\n                                               image: results.image\r\n                                           }))\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarInSessionComponent/>\r\n                <div className=\"container\">\r\n                    <h2 className=\"large\">Dashboard</h2>\r\n                    <p className=\"lead\">\r\n                        <i className=\"fas fa-child\"> </i>\r\n                        Welcome, {this.state.user.name}</p>\r\n                </div>\r\n                <br/>\r\n\r\n                <div className=\"container\">\r\n                    <h4>Add an Image</h4>\r\n                    <br/>\r\n                    <FileUploader\r\n\r\n                        accept=\"image/*\"\r\n                        name='image'\r\n                        storageRef={firebase.storage().ref('Uploaded_Images')}\r\n                        onUploadSuccess={this.handleUploadSuccess}\r\n                    />\r\n                    <br/>\r\n                    <button className=\"btn btn-success\" onClick={() => this.saveImage()}>Save Image</button>\r\n                </div>\r\n\r\n                {   this.state.image &&\r\n                    <div className=\"container\">\r\n                        <ImageComponent\r\n                            imageUrl={this.state.image}/>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"container\">\r\n                    <h2 className=\"my-2\">Phone Number</h2>\r\n                    <PhoneNumberComponent\r\n                        githubUsername={this.props.githubUsername}\r\n                        user={this.state.user}\r\n                    />\r\n                </div>\r\n                <div className=\"container\">\r\n                    <h2 className=\"my-2\">GitHub Username</h2>\r\n                    <GitHubDashboard\r\n                        githubUsername={this.props.githubUsername}\r\n                        user={this.state.user}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <h2 className=\"my-2\">Experience Credentials</h2>\r\n                    <ExperienceTableComponent\r\n                        experienceId={this.props.experienceId}\r\n                        user={this.state.user}\r\n                    />\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <h2 className=\"my-2\">Education Credentials</h2>\r\n                    <EducationTableComponent\r\n                        educationId={this.props.educationId}\r\n                        user={this.state.user}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DashboardContainer\r\n// const stateToPropertyMapper = (state) => {\r\n// }\r\n// const dispatchToPropertyMapper = (dispatch) => {\r\n// }\r\n// export default connect(stateToPropertyMapper, dispatchToPropertyMapper)\r\n// (DashboardContainer)\r\n","const initialState = {\r\n    token : localStorage.getItem('token'),\r\n    isSession : false\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    // console.log(\"AA\",action.token)\r\n    switch (action.type) {\r\n\r\n        case \"ADD_TOKEN\": {\r\n            console.log(\"token in reducer: \", action.token)\r\n            localStorage.setItem('token', action.token)\r\n            return {\r\n                token: localStorage.getItem('token'),\r\n                isSession: true\r\n            }\r\n        }\r\n        case \"REMOVE_TOKEN\":\r\n            return {\r\n                token: null,\r\n                isSession: false\r\n            }\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer\r\n","import React, {Component, Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport img1 from '../img/showcase.jpg';\r\nimport Moment from 'react-moment';\r\nimport axios from \"axios\";\r\nimport './main.css';\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass NeoPostItem extends Component {\r\n\r\n    constructor(props) {\r\n        console.log(props)\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        likeNumber: this.props.likes.length,\r\n        commentsNumber: this.props.comments.length,\r\n        show: true,\r\n        showDelete: this.props.showDelete,\r\n        token: '',\r\n        likeStatus: false,\r\n        userId: this.props.id,\r\n        image: '',\r\n        currentUser: '',\r\n        name: this.props.name\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if(prevProps.name!==this.props.name){\r\n    //         console.log(this.props.name)\r\n    //     }\r\n    //     console.log(\"hello\")\r\n    // }\r\n\r\n    async componentDidMount() {\r\n        {\r\n            localStorage.getItem('token') === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n\r\n        this.setState({\r\n                          token: localStorage.getItem('token')\r\n                      })\r\n\r\n       await fetch(\r\n            `${API_URL}/profile/me`, {\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token')\r\n                }\r\n            }\r\n        )\r\n            .then(response => response.json())\r\n            .then(results => this.setState({\r\n                                               currentUser: results.user,\r\n                                           }))\r\n\r\n        // await fetch(`${API_URL}/profile/user/${this.props.id}`)\r\n        //     .then(response => response.json())\r\n        //     .then(res =>{\r\n        //         console.log(\"Image \"+res.user.name)\r\n        //\r\n        //         this.setState({\r\n        //                           image: res.image\r\n        //                           // name: res.user.name\r\n        //                       })})\r\n    }\r\n\r\n    // getImageById = async () => {\r\n    //     await this.setImageUrl();\r\n    // }\r\n    //\r\n    // // setUserId = () => {\r\n    // //     this.setState({\r\n    // //                       userId: this.props.user._id\r\n    // //                   })\r\n    // // }\r\n    //\r\n    // setImageUrl = () => {\r\n    //\r\n    // }\r\n\r\n    handleLike = () => {\r\n        fetch(`${API_URL}/posts/like/${this.props._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(res => {\r\n                      if (res) {\r\n                          if (res.status !== 200) {\r\n                              this.setState({\r\n                                                likeStatus: true\r\n                                            })\r\n                          } else {\r\n                              this.setState({\r\n                                                likeNumber: this.state.likeNumber + 1,\r\n                                            })\r\n                          }\r\n                          setTimeout(function () {\r\n                              this.setState({likeStatus: false});\r\n                          }.bind(this), 3000);\r\n                      }\r\n                  }\r\n            )\r\n    }\r\n\r\n    handleUnlike = () => {\r\n        fetch(`${API_URL}/posts/unlike/${this.props._id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(res => {\r\n                      if (res) {\r\n                          this.setState({\r\n                                            likeNumber: this.state.likeNumber - 1\r\n                                        })\r\n                      }\r\n                  }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.show ?\r\n            <div>\r\n                {this.state.likeStatus && <div className=\"alert alert-danger\" role=\"alert\">\r\n                    You have already liked this post\r\n                </div>}\r\n                <div className='post bg-white p-1 my-1'>\r\n                    <div>\r\n                        <Link>\r\n                            <img style={{height: 130, width: 100}}\r\n                                 src={this.props.image}\r\n                                 alt=''/>\r\n                            <h4>{this.props.name}</h4>\r\n                            {/*<h3>{this.state.image}</h3>*/}\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <p className='my-1'>{this.props.text}</p>\r\n                        <p className='post-date'>\r\n                            Posted on <Moment format='YYYY/MM/DD'>{this.props.date}</Moment>\r\n                        </p>\r\n                        <Fragment>\r\n                            <button\r\n                                onClick={this.handleLike}\r\n                                type='button'\r\n                                className='btn btn-light'\r\n                            >\r\n                                <i className='fa fa-thumbs-up'/>\r\n                                <span>{this.state.likeNumber > 0 &&\r\n                                       <span>{this.state.likeNumber}</span>}</span>\r\n                            </button>\r\n                            <button\r\n                                onClick={this.handleUnlike}\r\n                                type='button'\r\n                                className='btn btn-light'\r\n                            >\r\n                                <i className='fa fa-thumbs-down'/>\r\n                            </button>\r\n                            <Link to={'/posts/' + this.props._id} className='btn btn-primary'>\r\n                                Comment {this.state.showDelete ? <span>{this.state.commentsNumber\r\n                                                                        > 0 &&\r\n                                                                        <span>{this.state.commentsNumber}</span>}</span>\r\n                                                               : null}\r\n                            </Link>\r\n                            {/*{!auth.loading && user === auth.user._id && (*/}\r\n                            {this.props.user._id === this.state.currentUser._id &&\r\n                             <button\r\n                                 onClick={() => this.props.delete(this.props._id)}\r\n                                 type='button'\r\n                                 className='btn btn-danger'\r\n                             >\r\n                                 <i className='fa fa-times'/>\r\n                             </button>\r\n                            }\r\n                        </Fragment>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                            :\r\n            null\r\n        );\r\n    }\r\n}\r\n\r\nexport default NeoPostItem;\r\n","import React, {Component, Fragment} from 'react';\r\nimport NeoPostItem from \"./NeoPostItem\";\r\nimport axios from \"axios\";\r\nimport './main.css';\r\nimport NavBarInSessionComponent from \"../Component/NavBar/NavBarInSessionComponent\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass NeoPosts extends Component {\r\n    state = {\r\n        posts: [],\r\n        inputPost: '',\r\n        text: '',\r\n        token: '',\r\n        postStatus:false,\r\n    }\r\n\r\n    deletePost = async (id) => {\r\n\r\n        await fetch(`${API_URL}/posts/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'x-auth-token': this.state.token\r\n            }\r\n        })\r\n\r\n        // await axios.delete('http://localhost:3002/codebook/posts/' + id).then((res) => {\r\n        //     console.log(res)\r\n        // });\r\n\r\n\r\n        let postsData = await axios.get(`${API_URL}/posts`,\r\n            {\r\n                headers: {\r\n                    \"x-auth-token\": localStorage.getItem('token')\r\n                }\r\n            })\r\n        console.log(postsData)\r\n        this.setState({\r\n            posts: postsData.data\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        {\r\n            localStorage.getItem('token') === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n\r\n        this.setState({\r\n            token : localStorage.getItem('token')\r\n        })\r\n        let postsData = await axios.get(`${API_URL}/posts`,\r\n            {\r\n                headers: {\r\n                    \"x-auth-token\": localStorage.getItem('token'),\r\n                }\r\n            })\r\n        console.log(postsData)\r\n        this.setState({\r\n            posts: postsData.data\r\n        })\r\n    }\r\n\r\n    // async componentDidUpdate  (prevProps, prevState, snapshot) {\r\n    //     if(prevState.posts!==this.state.posts) {\r\n    //         let postsData = await axios.get('http://localhost:3002/codebook/posts',\r\n    //             {\r\n    //                 headers: {\r\n    //                     \"x-auth-token\": 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNWU5NGM1ZGE3NTJiNjMwMDA0NGUxYTk0In0sImlhdCI6MTU4NjgwODI4MiwiZXhwIjoxNTg3MTY4MjgyfQ.c5VZhqxOpUogyqrPNL9rM-yDIP5GhXT6upMmDTvOqHI'\r\n    //                 }\r\n    //             });\r\n    //\r\n    //         this.setState({\r\n    //             posts: postsData.data\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    submitPost = async () => {\r\n        // console.log(\"NEO token\", this.state.token)\r\n        await fetch(`${API_URL}/posts`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'x-auth-token': this.state.token,\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {text : this.state.text}\r\n            )\r\n        })\r\n\r\n        const postsData = await axios.get(`${API_URL}/posts`,\r\n            {\r\n                headers: {\r\n                    \"x-auth-token\": this.state.token\r\n                }\r\n            });\r\n        console.log(postsData);\r\n        await this.setState({\r\n            posts: postsData.data,\r\n            text: '',\r\n            postStatus:true\r\n        })\r\n        // setTimeout(function(){\r\n        //     this.setState({postStatus:false});\r\n        // }.bind(this),3000);\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarInSessionComponent/>\r\n                <div class=\"container\">\r\n                    <div>{this.state.postStatus&&<div  className=\"alert alert-success\" role=\"alert\">Post Created Successfully</div>}</div>\r\n                    <h1 className='large text-primary'>Posts</h1>\r\n                    <p className='lead'>\r\n                        <i className='fa fa-user'/> Welcome to the community\r\n                    </p>\r\n                    <div className='post-form'>\r\n                        <div className='bg-primary p'>\r\n                            <h3>Say Something...</h3>\r\n                        </div>\r\n                        <form\r\n                            className='form my-1'\r\n                            onSubmit={e => {\r\n                                e.preventDefault();\r\n                            }}\r\n                        >\r\n        <textarea\r\n            name='text'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Create a post'\r\n            value={this.state.text}\r\n            required\r\n            onChange={(e) => this.handleChange(e)}\r\n        />\r\n                            <button type='submit' className='btn btn-dark my-1' onClick={() => this.submitPost()}>\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    {/*{this.state.posts && this.state.posts.map(post => (*/}\r\n                    {/*    <li>{post.user.image}</li>*/}\r\n                    {/*))}*/}\r\n                    {console.log(\"posts\", this.state.posts)}\r\n                    {this.state.posts && this.state.posts.map(post => (\r\n                        <NeoPostItem currentPost = {post} image={post.user.image} name={post.user.name} id={post.user._id} showDelete={true} delete={this.deletePost} {...post} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NeoPosts;\r\n","\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {API_URL} from \"../common/constants\";\r\n\r\nclass CommentItem extends Component {\r\n\r\n    state={\r\n        show:true,\r\n        userName:''\r\n    }\r\n\r\n    handleDeleteComment =()=>{\r\n        axios.delete(`${API_URL}/posts/comment/${this.props.postId}/${this.props._id}`,{\r\n            headers:{\r\n                \"x-auth-token\": localStorage.getItem('token')\r\n            }\r\n        }).then((res)=>{\r\n            if(res){\r\n                this.setState({\r\n                                  show:false\r\n                              })\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n            axios.get(`${API_URL}/users/id/${this.props.user}`,{\r\n                headers:{\r\n                    \"x-auth-token\": localStorage.getItem('token')\r\n                }\r\n            }).then((res)=>{\r\n            this.setState({\r\n                userName:res.data.name\r\n                          })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.show?\r\n            <div className='post bg-white p-1 my-1'>\r\n                <div>\r\n                    <Link >\r\n                        <h4>{this.state.userName}</h4>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <p className='my-1'>{this.props.text}</p>\r\n                    <p className='post-date'>\r\n                        Posted on {this.props.date}\r\n                    </p>\r\n                    <button\r\n                        onClick={this.handleDeleteComment}\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                    >\r\n                        <i className='fa fa-times' />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            :\r\n            null\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentItem;\r\n","import React, {Component,Fragment} from 'react';\r\nimport axios from \"axios\";\r\nimport {Link} from 'react-router-dom';\r\nimport NeoPostItem from \"./NeoPostItem\";\r\nimport CommentItem from \"./CommentItem\";\r\nimport {API_URL} from \"../common/constants\";\r\nclass NeoPostDetail extends Component {\r\n\r\n    state = {\r\n        id: this.props.match.params.id,\r\n        post:{},\r\n        comment:'',\r\n        comments:[],\r\n        commentNumber:0\r\n    }\r\n\r\n    handleComment = (e) =>{\r\n        this.setState({\r\n            comment:e.target.value\r\n        })\r\n    }\r\n\r\n     handlePostComponent= async(comment)=>{\r\n\r\n        await fetch(`${API_URL}/posts/comment/${this.state.post._id}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({text:comment})\r\n        });\r\n\r\n         let postData = await axios.get(`${API_URL}/posts/'${this.state.post._id}`,{\r\n             headers:{\r\n                 \"x-auth-token\": localStorage.getItem('token')\r\n             }\r\n         });\r\n         console.log(postData)\r\n         this.setState({\r\n             comments:postData,\r\n             comment:''\r\n         })\r\n    }\r\n\r\n    handleDeleteOfComment=()=>{\r\n        this.setState({\r\n            commentNumber:this.state.commentNumber-1\r\n        })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n        let postData = await axios.get(`${API_URL}/posts/${this.state.id}`,{\r\n            headers:{\r\n                \"x-auth-token\": localStorage.getItem('token')\r\n            }\r\n        })\r\n\r\n        let data = [];\r\n\r\n        data.push(postData.data);\r\n\r\n        this.setState({\r\n            post:data[0],\r\n            comments:data[0].comments\r\n        })\r\n        console.log(this.state.post)\r\n        // console.log('here 3'+this.state.comments.length);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"container\"}>\r\n                <Fragment>\r\n                    <Link to=\"/posts\" className=\"btn\">\r\n                        Back To Posts\r\n                    </Link>\r\n\r\n                    {/*{console.log(...this.state.post)}*/}\r\n\r\n                    {this.state.post.likes &&\r\n                        <NeoPostItem showDelete={false} likes={this.state.post.likes}\r\n                                     _id={this.state.post._id}\r\n                                     user={this.state.post.user}\r\n                                     comments={this.state.post.comments}\r\n                                     text={this.state.post.text}\r\n                                     date={this.state.post.date}\r\n                        /> }\r\n\r\n                    <div className='post-form'>\r\n                        <div className='bg-prim ary p'>\r\n                            <h3>Leave a Comment</h3>\r\n                        </div>\r\n                        <form\r\n                            className='form my-1'>\r\n        <textarea\r\n            name='text'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Comment the post'\r\n            value={this.state.comment}\r\n            onChange={e => this.handleComment(e)}\r\n            required\r\n        />\r\n                           <input type='submit' className='btn btn-dark my-1' value='Submit' onClick={()=>this.handlePostComponent(this.state.comment)} />\r\n                        </form>\r\n\r\n\r\n                        {/*{this.state.comments && this.state.comments.map(comment=>(*/}\r\n                        {/*    <li>{comment.text}</li>*/}\r\n                        {/*))}*/}\r\n\r\n                        {this.state.comments && this.state.comments.length>0 &&  this.state.comments.map(com=>(\r\n                            <CommentItem postId={this.state.id} _id={com._id}  text={com.text} user={com.user} {...com} />\r\n\r\n                        ))}\r\n\r\n                    </div>\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NeoPostDetail;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class NavBarAdmin extends React.Component {\r\n\r\n\r\n    state = {\r\n        selectedTab: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n                    <a href=\"#\" className=\"navbar-brand\">\r\n                        <Link to={\"/\"}>\r\n                            <i className=\"fas fa-code-branch\"/>\r\n                            GeeksHub\r\n                        </Link>\r\n                    </a>\r\n\r\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbar-menu\">\r\n                        <span className=\"navbar-toggler-icon\"/>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbar-menu\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/admin-users\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Administer Users</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/admin-posts\"}>\r\n                                    <span className=\"nav-link wbdv-page-tab\">Administer Posts</span>\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to={\"/sign-in\"}>\r\n                                    <span  className=\"nav-link wbdv-page-tab\"\r\n                                           onClick={ async () => {\r\n                                               localStorage.clear()\r\n\r\n                                           }\r\n                                           }\r\n                                    >Sign Out</span>\r\n                                </Link>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {API_URL, LOCALHOST_URL} from \"../common/constants\";\r\nimport NavBarAdmin from \"../Component/NavBar/NavBarAdmin\";\r\n\r\nclass AdminUsers extends React.Component {\r\n\r\n    state = {\r\n        dashboardToken: '',\r\n        user: {\r\n            id: '',\r\n            name: '',\r\n            image: ''\r\n        },\r\n        users: []\r\n    }\r\n\r\n    deleteUserAndProfile = (userId) => {\r\n        fetch(`${API_URL}/profile/${userId}`,{\r\n            method: \"DELETE\",\r\n        }).then(() => this.getUsers())\r\n    }\r\n\r\n    getUsers = () => {\r\n        fetch(`${API_URL}/users/all`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState({\r\n                users: res\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.dashboardToken = localStorage.getItem('token')\r\n        console.log(\"Dashboard token: \", this.state.dashboardToken)\r\n        {\r\n            this.state.dashboardToken === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n        fetch(`${LOCALHOST_URL}/profile/me`, {\r\n            headers: {\r\n                'x-auth-token': this.state.dashboardToken,\r\n                'content-type': 'application/json'\r\n            },\r\n        }).then(res => res.json())\r\n            .then(res =>\r\n                this.setState({\r\n                    user: res.user\r\n                })\r\n            ).then(() => {\r\n            {\r\n                this.state.user.name !== 'Alice' &&\r\n                this.props.history.push('/dashboard')\r\n\r\n            }\r\n\r\n        })\r\n\r\n        this.getUsers()\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarAdmin/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"main-box no-header clearfix bg-color-alice-blue\">\r\n                                <div className=\"main-box-body clearfix\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table user-list bg-color-alice-blue\">\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th><span>User</span></th>\r\n                                                <th><span>Created</span></th>\r\n                                                <th><span>Email</span></th>\r\n                                                <th>&nbsp;</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                            {\r\n                                                this.state.users.map(user =>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <img src={user.image}\r\n                                                                 alt=\"\"/>\r\n                                                            <span className=\"user-link\">{user.name}</span>\r\n                                                            {user.name !== 'Alice' &&\r\n                                                            <span className=\"user-subhead\">Geek</span>\r\n                                                            }\r\n                                                            {user.name === 'Alice' &&\r\n                                                            <span className=\"user-subhead\">Admin</span>\r\n                                                            }\r\n                                                        </td>\r\n                                                        <td>{user.date.substring(0, 10)}</td>\r\n\r\n                                                        <td>\r\n                                                            <h6>{user.email}</h6>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {/*                    <a href=\"#\" className=\"table-link\">*/}\r\n                                                            {/*<span className=\"fa-stack\">*/}\r\n                                                            {/*    <i className=\"fa fa-square fa-stack-2x\"/>*/}\r\n                                                            {/*    <i className=\"fa fa-search-plus fa-stack-1x fa-inverse\"/>*/}\r\n                                                            {/*</span>*/}\r\n                                                            {/*                    </a>*/}\r\n                                                            {/*                    <a href=\"#\" className=\"table-link\">*/}\r\n                                                            {/*<span className=\"fa-stack\">*/}\r\n                                                            {/*    <i className=\"fa fa-square fa-stack-2x\"/>*/}\r\n                                                            {/*    <i className=\"fa fa-pencil fa-stack-1x fa-inverse\"/>*/}\r\n                                                            {/*</span>*/}\r\n                                                            {/*                    </a>*/}\r\n\r\n                                                            {   user.name !== 'Alice' &&\r\n                                                            <span className=\"fa-stack cursor-pointer\"\r\n                                                                  onClick={() => this.deleteUserAndProfile(user._id)}\r\n                                                            >\r\n                                                                      <i className=\"fas fa-trash-alt btn-lg btn-danger\"/>\r\n                                                                </span>\r\n                                                            }\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n}\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n}\r\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(AdminUsers)\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {API_URL} from \"../common/constants\";\r\nimport NavBarAdmin from \"../Component/NavBar/NavBarAdmin\";\r\n\r\nclass AdminPosts extends React.Component {\r\n\r\n    state = {\r\n        dashboardToken: '',\r\n        text: '',\r\n        user: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        posts: [],\r\n        edit: false,\r\n        selectedPost: '',\r\n    }\r\n\r\n    addPost = () => {\r\n        fetch(`${API_URL}/posts`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token'),\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    text: this.state.text\r\n                }\r\n            )\r\n        }).then(() => this.setState({\r\n            text: ''\r\n        }))\r\n            .then(() => this.getPosts())\r\n\r\n    }\r\n\r\n    updatePost = (postId) => {\r\n        fetch(`${API_URL}/posts/admin/update/${postId}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    text: this.state.text\r\n                }\r\n            )\r\n        }).then(() => this.setState({\r\n            text: '',\r\n            edit: false,\r\n            selectedPost: ''\r\n        }))\r\n            .then(() => this.getPosts())\r\n    }\r\n    deletePost = (postId) => {\r\n        fetch(`${API_URL}/posts/admin/delete/${postId}`, {\r\n            method: \"DELETE\",\r\n        }).then(() => this.getPosts())\r\n    }\r\n\r\n    getPosts = () => {\r\n        fetch(`${API_URL}/posts`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState({\r\n                posts: res\r\n            }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.dashboardToken = localStorage.getItem('token')\r\n        console.log(\"Dashboard token: \", this.state.dashboardToken)\r\n        {\r\n            this.state.dashboardToken === null &&\r\n            this.props.history.push('/sign-in')\r\n        }\r\n        fetch(`${API_URL}/profile/me`, {\r\n            headers: {\r\n                'x-auth-token': this.state.dashboardToken,\r\n                'content-type': 'application/json'\r\n            },\r\n        }).then(res => res.json())\r\n            .then(res =>\r\n                this.setState({\r\n                    user: res.user\r\n                })\r\n            ).then(() => {\r\n            {\r\n                this.state.user.name !== 'Alice' &&\r\n                this.props.history.push('/dashboard')\r\n\r\n            }\r\n\r\n        })\r\n\r\n        this.getPosts()\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBarAdmin/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Post Content\"\r\n                                onChange={async (e) => {\r\n                                    const n = e.target.value;\r\n                                    await this.setState({\r\n                                        text: n\r\n                                    })\r\n                                }\r\n                                }\r\n\r\n                                id=\"vehicle1\" name=\"vehicle1\"\r\n                                value={this.state.text}/>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-12\">\r\n                            <br/>\r\n                            <span\r\n                                onClick={() => this.addPost()}\r\n                                className=\"btn btn-danger\">Add Post</span>\r\n                            <br/>\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"col-lg-12\">\r\n                            <div className=\"main-box no-header clearfix bg-color-alice-blue\">\r\n                                <div className=\"main-box-body clearfix\">\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table user-list bg-color-alice-blue\">\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th><span>Post</span></th>\r\n                                                <th><span>Posted By</span></th>\r\n                                                <th><span>Date</span></th>\r\n                                                <th>&nbsp;</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                            {\r\n                                                this.state.posts.map(post =>\r\n\r\n                                                    <tr>\r\n                                                        {(!this.state.edit || this.state.selectedPost !== post._id) &&\r\n                                                        <td>\r\n                                                            <div className=\"col-sm-12\">\r\n                                                                <p><small>{post.text}</small></p>\r\n                                                            </div>\r\n                                                            <div className=\"col-sm-2\">\r\n                                                                <span\r\n                                                                    onClick={() => this.setState({\r\n                                                                        edit: true,\r\n                                                                        selectedPost: post._id,\r\n                                                                        text: post.text\r\n                                                                    })}\r\n                                                                    className=\"btn btn-danger\">Edit</span>\r\n                                                            </div>\r\n\r\n                                                        </td>\r\n                                                        }\r\n                                                        {\r\n                                                            this.state.edit && this.state.selectedPost === post._id &&\r\n                                                            <td>\r\n                                                                <div className=\"col-sm-12\">\r\n                                                                    <input\r\n                                                                        className=\"nav-item ml-auto form-control\"\r\n                                                                        placeholder=\"Input New Post\"\r\n                                                                        onChange={async (e) => {\r\n                                                                            const n = e.target.value;\r\n                                                                            await this.setState({\r\n                                                                                    ...this.state,\r\n                                                                                    text: n\r\n                                                                                }\r\n                                                                            )\r\n                                                                        }}\r\n                                                                        value={this.state.text}\r\n                                                                    />\r\n                                                                </div>\r\n                                                                <br/>\r\n\r\n                                                                <div className=\"col-sm-2\">\r\n                                                                <span\r\n                                                                    onClick={async () => {\r\n                                                                        await this.updatePost(post._id)\r\n                                                                        await this.setState({\r\n                                                                            edit: false,\r\n                                                                            selectedPost: '',\r\n                                                                            text: ''\r\n                                                                        })\r\n                                                                    }\r\n                                                                    }\r\n                                                                    className=\"btn btn-success\">Save</span>\r\n                                                                </div>\r\n\r\n                                                            </td>\r\n                                                        }\r\n\r\n                                                        <td>\r\n                                                            <img src={post.user.image}\r\n                                                                 alt=\"\"/>\r\n                                                            <span className=\"user-link\">{post.user.name}</span>\r\n                                                            <span className=\"user-subhead\">{post.user.email}</span>\r\n                                                        </td>\r\n                                                        <td>{post.date.substring(0, 10)}</td>\r\n\r\n                                                        <td>\r\n\r\n                                                            <span className=\"fa-stack cursor-pointer\"\r\n                                                                  onClick={() => this.deletePost(post._id)}\r\n                                                            >\r\n                                                                      <i className=\"fas fa-trash-alt btn-lg btn-danger\"/>\r\n                                                                </span>\r\n\r\n\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n}\r\nconst dispatchToPropertyMapper = (dispatch) => {\r\n}\r\nexport default connect(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(AdminPosts)\r\n","import React from \"react\";\r\nimport {combineReducers, createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport SocialMediaClient from \"./Prototype/social-media-client\";\r\nimport SocialMediaUserDetails from \"./Prototype/social-media-user-details\";\r\nimport ProfileDetailsContainer from \"./Profile/ProfileDetailsContainer\";\r\nimport GitHubRepositories from \"./Profile/GitHubRepositories\";\r\nimport ProfilesContainer from \"./Profile/ProfilesContainer\";\r\nimport LandingComponent from \"./Component/LandingComponent\";\r\nimport SignUpComponent from \"./SignUp/SignUpComponent\";\r\nimport SignInComponent from \"./SignIn/SignInComponent\";\r\nimport FailureComponent from \"./Temporary/failure\";\r\nimport SuccessComponent from \"./Temporary/success\";\r\nimport DashboardContainer from \"./Dashboard/DashboardContainer\";\r\nimport authReducer from \"./Reducer/auth.reducer\"\r\nimport NeoPosts from \"./Post/NeoPosts\";\r\nimport NeoPostDetail from \"./Post/NeoPostDetail\";\r\nimport AdminUsers from \"./Admin/admin\";\r\nimport AdminPosts from \"./Admin/adminposts\";\r\n\r\n\r\nconst store = createStore(authReducer)\r\n\r\nclass SocialMediaManagerComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <Route\r\n                        path=\"/\"\r\n                        exact={true}\r\n                        component={LandingComponent}\r\n                    >\r\n                    </Route>\r\n                        <Route path=\"/posts\" exact component={NeoPosts} >\r\n\r\n                        </Route>\r\n                        <Route path=\"/posts/:id\" exact component={NeoPostDetail} >\r\n\r\n                        </Route>\r\n\r\n\r\n\r\n                    <Route\r\n                        path=\"/user-details/:userId\"\r\n                        exact={true}\r\n                        render={\r\n                            (props) =>\r\n                                <SocialMediaUserDetails\r\n                                    userId={props.match.params.userId}\r\n                                />\r\n                        }\r\n                    >\r\n                    </Route>\r\n\r\n                    <Route\r\n                        path=\"/profiles/:userId\"\r\n                        exact={true}\r\n                        render={\r\n                            (props) =>\r\n                                <ProfileDetailsContainer\r\n                                    userId = {props.match.params.userId}\r\n                                    {...props}\r\n                                />\r\n                        }\r\n                    >\r\n                    </Route>\r\n\r\n                    <Route\r\n                        path=\"/profiles/:profileId/github/:repoName\"\r\n                        exact={true}\r\n                        render={\r\n                            (props) =>\r\n                                <GitHubRepositories\r\n                                    profileId={props.match.params.profileId}\r\n                                    repoName={props.match.params.repoName}\r\n                                    {...props}\r\n                                />\r\n                        }\r\n                    >\r\n                    </Route>\r\n\r\n                    <Route\r\n                        path=\"/profiles\"\r\n                        exact={true}\r\n                        render={\r\n                            (props) =>\r\n                                <ProfilesContainer/>\r\n                        }\r\n                    >\r\n                    </Route>\r\n\r\n                    <Provider store={store}>\r\n\r\n                        <Route\r\n                            path=\"/success\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <SuccessComponent\r\n                                        email={props.match.params.email}\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/sign-in\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <SignUpComponent\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                            component={SignInComponent}\r\n                        >\r\n\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/admin-users\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <AdminUsers\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/admin-posts\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <AdminPosts\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/dashboard\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <DashboardContainer\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/dashboard/experience/:experienceId\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <DashboardContainer\r\n                                        experienceId = {props.match.params.experienceId}\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/dashboard/education/:educationId\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <DashboardContainer\r\n                                        educationId = {props.match.params.educationId}\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/dashboard/github/:githubUsername\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <DashboardContainer\r\n                                        githubUsername = {props.match.params.githubUsername}\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n\r\n                        <Route\r\n                            path=\"/sign-up\"\r\n                            exact={true}\r\n                            render={\r\n                                (props) =>\r\n                                    <SignUpComponent\r\n                                        {...props}\r\n                                    />\r\n                            }\r\n                        >\r\n                        </Route>\r\n                    </Provider>\r\n\r\n\r\n\r\n                    <Route\r\n                        path=\"/failure\"\r\n                        exact={true}\r\n                        component={FailureComponent}\r\n                    >\r\n\r\n                    </Route>\r\n\r\n\r\n\r\n                </Router>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default SocialMediaManagerComponent\r\n\r\n","import React from 'react';\r\nimport SocialMediaManagerComponent from \"./SocialMediaManagerComponent\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <SocialMediaManagerComponent/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}